{"version":3,"sources":["frontend/redux-state/classification/classificationReducer.ts","backend/workers/aiWorker/workerProcedures/vectorizers/tfidf.ts","backend/workers/common/datatypes.ts","backend/workers/docIndex/indexWorkerTypes.ts","backend/workers/docIndex/ndx_worker.ts","backend/workers/common/BaseWorker.ts","backend/utils/logger.ts","backend/workers/docIndex/IndexWorkerSingleton.ts","backend/workers/aiWorker/ai_worker.ts","backend/workers/aiWorker/aiWorkerTypes.ts","backend/workers/aiWorker/AIWorkerSingleton.ts","frontend/redux-state/examples/exampleState.ts","frontend/QueryContext/searchReducer.ts","frontend/redux-state/modes/modeReducer.ts","frontend/redux-state/rootState.ts","backend/database/database.ts","frontend/QueryContext/useSearchQuery.tsx","frontend/components/Beacon.tsx","frontend/components/searchBar/SearchBar.tsx","frontend/components/searchBar/FilterCheckboxes.tsx","backend/database/useDatabase.ts","frontend/components/appBar/ActiveLearningToggleContainer.tsx","frontend/components/appBar/DownloadButton.tsx","frontend/components/appBar/DeleteAllButton.tsx","frontend/components/appBar/ForkOnGithub.tsx","frontend/components/appBar/Appbar.tsx","frontend/components/layouts/templates/ThreeColumnBody.tsx","frontend/utils/labelsetcolors/labelsetcolors.ts","frontend/components/labelControls/significantTerms/SignificantTerm.tsx","frontend/components/labelControls/significantTerms/SignificantTermsList.tsx","frontend/components/labelControls/significantTerms/SignificantTermsContainer.tsx","frontend/components/labelControls/SelectedLabelToggle.tsx","frontend/components/labelControls/LabelRow.tsx","controllers/labelControllers/DefaultLabelController.ts","frontend/components/labelControls/labelControls.tsx","frontend/active_learning/useActiveLearning.ts","frontend/active_learning/ActiveLearningContext.tsx","backend/database/dbProcesdures.ts","frontend/components/example/ClassificationRibbon.tsx","frontend/components/example/Example.tsx","frontend/active_learning/ActiveLearningBody.tsx","frontend/classifier/workerComp.tsx","frontend/components/layouts/ExampleInfiniteScroll.tsx","frontend/components/dataUpload/fileReader.ts","frontend/components/dataUpload/simpleDataUpload.tsx","frontend/components/dataUpload/AddDataDialog.tsx","frontend/components/layouts/OpenAnnotationBodyLayout.tsx","frontend/components/layouts/WelcomeLayout.tsx","frontend/components/layouts/LayoutDispatch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ClassificationActions","classificationSlice","createSlice","name","initialState","classifications","labels","labelsToExample","reducers","addLabel","state","action","includes","payload","push","deleteLabel","filter","x","forEach","exampleId","classify","labelName","currentLabel","undefined","actions","Counter","this","items","key","val","get","tokenizingRegex","doExample","example","tf","df","Set","content","split","word","match","increment","add","TFIDFTransformer","examples","minDF","ex_res","tfIdf","Object","keys","Math","log1p","calculateTFIDF","EWorkerName","ERquestOrResponesOrUpdate","GenericWorkerTypes","IndexRequestMessageKind","IndexResponseMessageKind","Request","Response","NSIndexWorker","Worker","WorkerSingletonBase","workerInstance","initialized","requestId","responseListeners","worker","Promise","resolve","responseHandler","event","data","kind","removeEventListener","addEventListener","logger","EventKinds","IndexWorkerSingleton","indexName","nextRequestId","message","workerName","index","direction","request","startInit","postMessage","me","registerResponseHandler","then","response","Error","startIndexing","reject","startSignificantTerms","query","startQuery","instance","AIRequestMessageKind","AIResponseMessageKind","AIUpdateMessageKind","Update","NSAIWorker","AIWorkerSingleton","ai","training","method","startVectorize","beginVectorization","startValidation","startFitPredict","beginFitPredict","ExampleActions","exampleSlice","exampleIds","exampleIdsByDatasetName","exampleTermFrequency","docFrequency","addExamples","fitTransform","datasetName","datasetSlice","getInstance","a","dataLoader","insertToDb","indexWorkerSingleton","addDocs","exampleReducer","reducer","SearchTypes","searchSlice","hasLabel","hasPrediction","label","searchQuery","predictedLabel","hasFilter","everSearched","setSearchParams","entries","params","value","appModeSlice","mode","changeMode","enableMapSet","enableAllPlugins","rootReducer","combineReducers","classificationReducer","searchReducer","appMode","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","useTypedSelector","useSelector","OurDatabase","version","stores","indexCache","vector","tfidf","kfold","table","changeCallbacks","tableName","callback","Dexie","difference","mainThreadDB","where","equals","first","newCount","count","update","on","changes","labelChangeAccumulator","change","type","oldLabel","oldObj","newLabel","obj","gatherLabelChangeCount","all","map","updateLabelCount","length","initatiateMainThreadDB","useSearchQuery","searchParams","searchFunction","React","useCallback","criteria","filterFunction","toCollection","primaryKeys","filterResult","searchResults","results","intersection","useQuery","useStyles","makeStyles","theme","webkitTransform","opacity","transform","beaconContainer","position","beacon","top","left","backgroundColor","palette","secondary","light","height","spacing","width","borderRadius","boxShadow","main","animationName","animationDuration","animationTimingFunction","animationIterationCount","Beacon","show","classes","className","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","breakpoints","up","resultCount","margin","fontWeight","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","display","alignItems","justifyContent","SearchBar","useState","setValue","dispatch","useDispatch","debouncedUpdate","debounce","e","target","useEffect","InputBase","placeholder","onChange","root","input","inputProps","endAdornment","InputAdornment","Fade","in","isLoading","LinearProgress","icon","checkedIcon","FilterCheckboxes","props","FormGroup","row","style","FormControlLabel","labelPlacement","control","Checkbox","checked","v","fontSize","size","useDatabase","queryKey","dbQuery","changeKey","resetQueryCallback","refetch","addTableEventListener","removeTableEventListener","useExampleCount","db","ActiveLearningToggleContainer","predictionCountQuery","Switch","nextMode","downloadResults","orderBy","reverse","toArray","metaDataKeys","metadata","columns","formatedExamples","ex","csv","Papa","fields","fileDownload","DownloadButton","useMutation","downloadFunc","downloadStatus","Button","variant","onClick","disabled","header","background","error","contrastText","button","dark","handleDelete","delete","localStorage","removeItem","window","location","reload","DeleteAllButton","open","setOpen","Dialog","onClose","DialogTitle","Typography","DialogContent","gutterBottom","DialogActions","animation","ForkOnGithub","href","aria-label","viewBox","fill","border","right","aria-hidden","d","transformOrigin","createStyles","grow","flexGrow","regularModeControls","menuButton","title","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","isActiveLearning","exampleCountQuery","hasExamples","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","MenuItem","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","currentTarget","aria-controls","aria-haspopup","AppBar","Toolbar","edge","noWrap","Slide","ThreeColumnBody","useTheme","orientation","propagateDimensions","flex","maxHeight","overflowY","Left","maxWidth","Middle","Right","LabselsetColorsManager","colormap","has","recolor","h","step","H","S","L","rgb","HSL2RGB","RGB2HEX","HSLToHex","RGBArray","hex","toString","q","p","round","colorManaer","cursor","term","score","SignificantTerm","searchForTerm","SignificantTermsList","terms","slice","ws","SignificantTermsContainer","labelController","getSignificantTerms","cacheTime","isError","JSON","stringify","isSuccess","SelectedLabelToggle","memo","filteredLabel","changeLabelFilter","filteredPrediction","marginBottom","textOverflow","userSelect","marginTop","nameContainer","textTransform","termsContainer","borderBottom","controlorContainers","toggleButton","LabelRow","getLabelColor","useMemo","borderColor","selected","applyLabelToSearchResults","useDefaultLabelController","transaction","labelState","useAnnotateAll","getSignificantTermsForLabel","source","AddLabel","labelCount","setName","TextField","fullWidth","InputProps","startAdornment","LabelControls","flexWrap","useActiveLearning","collection","sortBy","confidence","ActiveLearningContext","createContext","ActiveLearningContextProvider","activeLearningExamplesQuery","currentExample","setCurrentExample","currentCursor","setCurrentCursor","activeLearningExamples","goToNext","nextCursor","Provider","children","rejectLabel","rejectedLabels","hasNegativeOrRejectedLabel","Array","from","afterNewLabel","applyLabel","cbRoot","ClassBox","activeLearningContext","useContext","handleClick","onKeyDown","keyCode","preventDefault","comment","ClassificationRibbon","lineHeight","body","whiteSpace","divider","ribbon","HighlightedBody","text","spans","toLowerCase","end","tabIndex","Example","exampleQuery","onLoad","Paper","LabselsetColors","Divider","toLocaleString","dir","ActiveLearningBody","ref","useRef","context","current","focus","aiWorkerSingleton","WorkComp","working","setWorking","beginTfidfVectorizer","vectorize","beginUniversalVectorizer","trainSVM","validateModel","beginValidation","cache","CellMeasurerCache","fixedWidth","ExampleRenderer","columnIndex","virtualizedRowProps","parent","rowIndex","measure","ExampleInfiniteScroll","rowHeight","rowCount","rowRenderer","renderProps","deferredMeasurementCache","readCsvFile","file","parseConfig","headerPlacement","dynamicTyping","complete","result","skipEmptyLines","readJSONAsynch","reader","FileReader","onload","str","json","parse","isArray","readAsText","readUserInputFile","endsWith","papaParseResult","saveExamplesfn","labelKey","examplesArr","md5","FileUploadButton","inputRef","setKeys","setKey","setLabelKey","setData","saveExamples","saveStatus","handleFile","files","res","afterSubmit","Grid","container","item","xs","accept","multiple","htmlFor","component","required","select","helperText","k","AddDataDialog","AddDataDialogWithButton","buttonProps","NoDataBody","RegularBody","mountOnEnter","unmountOnExit","BodyDispatch","OpenAnnotationBody","WelcomeItem","justify","Icon","subtitle","WelcomeText","openDialog","align","CategoryIcon","DescriptionIcon","SearchIcon","ComputerIcon","DoneIcon","LockIcon","GithubIcon","WelcomeLayout","LayoutDispatch","createMuiTheme","typography","fontFamily","QueryCache","outline","App","queryCache","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeIndex","catch","err","offset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a404942d.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nnamespace ClassificationActions {\n  export interface ClassificationState {\n    classifications: Record<string, string>;\n    labels: Array<string>;\n    labelsToExample: Record<string, Array<string>>;\n  }\n\n  export interface ANewLabel {\n    name: string;\n  }\n\n  export interface ADeleteLabel {\n    name: string;\n  }\n\n  export interface AClassify {\n    exampleId: string;\n    labelName: string | null; // null is delete\n  }\n}\n\nfunction initialStateFactory(): ClassificationActions.ClassificationState {\n  return {\n    classifications: {},\n    labels: [],\n    labelsToExample: {},\n  };\n}\n\nconst classificationSlice = createSlice({\n  name: \"classificationSlice\",\n  initialState: initialStateFactory(),\n  reducers: {\n    addLabel(state, action: PayloadAction<ClassificationActions.ANewLabel>) {\n      if (!state.labels.includes(action.payload.name)) {\n        state.labels.push(action.payload.name);\n        state.labelsToExample[action.payload.name] = [];\n      }\n    },\n    deleteLabel(\n      state,\n      action: PayloadAction<ClassificationActions.ADeleteLabel>\n    ) {\n      state.labels = state.labels.filter((x) => x !== action.payload.name);\n      const exampleIdsToClear = state.labelsToExample[action.payload.name];\n      exampleIdsToClear.forEach((exampleId) => {\n        delete state.classifications[exampleId];\n      });\n      delete state.labelsToExample[action.payload.name];\n    },\n    classify(state, action: PayloadAction<ClassificationActions.AClassify>) {\n      const { exampleId, labelName } = action.payload;\n      const currentLabel = state.classifications[exampleId];\n\n      if (currentLabel === labelName) {\n        //do nothing\n      } else {\n        if (currentLabel !== undefined) {\n          //clear the old label\n          state.labelsToExample[currentLabel] = state.labelsToExample[\n            currentLabel\n          ].filter((x) => x !== exampleId);\n        }\n        if (labelName !== null) {\n          //If the user added a classification\n\n          state.labelsToExample[labelName].push(exampleId);\n          state.classifications[exampleId] = labelName;\n        } else {\n          //If the user deleted a classification\n          delete state.classifications[exampleId];\n        }\n      }\n    },\n  },\n});\n\nexport const classificationActions = classificationSlice.actions;\n\nexport default classificationSlice.reducer;\n","import Data from \"../../../../data_clients/datainterfaces\";\n\nexport class Counter {\n  items: Record<string, number>;\n\n  constructor() {\n    this.items = {};\n  }\n\n  get(key: string) {\n    return this.items[key] || 0;\n  }\n\n  increment(key: string) {\n    const val = this.get(key);\n    this.items[key] = val + 1;\n  }\n}\n\nexport const tokenizingRegex = /[\\b\\s-.,!&:]+(?!$)/;\nexport type TFIDFT = Record<string, Record<string, number>>;\n\nfunction doExample(example: Data.Example) {\n  const tf = new Counter();\n  const df = new Set<string>();\n\n  example.content.split(tokenizingRegex).forEach((word) => {\n    if (!word.match(/[\\d]/)) {\n      tf.increment(word);\n      df.add(word);\n    }\n  });\n  return { df, tf };\n}\n\nfunction calculateTFIDF(examples: Data.Example[], minDF = 4) {\n  const tf: Record<string, Counter> = {};\n  const df = new Counter();\n  examples.forEach((example) => {\n    //Calculate the df\n\n    const ex_res = doExample(example);\n    ex_res.df.forEach((word) => {\n      df.increment(word);\n    });\n    tf[example.exampleId] = ex_res.tf;\n  });\n  const tfIdf: TFIDFT = {};\n  examples.forEach((example) => {\n    tfIdf[example.exampleId] = {};\n\n    Object.keys(df.items).forEach((word) => {\n      if (df.get(word) > minDF) {\n        tfIdf[example.exampleId][word] = Math.log1p(\n          tf[example.exampleId].get(word) / df.get(word)\n        );\n      }\n    });\n  });\n  return { tfIdf, df };\n}\n\nclass TFIDFTransformer {\n  df: Counter;\n\n  constructor() {\n    this.df = new Counter();\n  }\n\n  fitTransform(examples: Data.Example[]) {\n    const { tfIdf, df } = calculateTFIDF(examples);\n    this.df = df;\n    return tfIdf;\n  }\n\n  transform(examples: Data.Example[]) {\n    const tfIdf: TFIDFT = {};\n    const tf: Record<string, Counter> = {};\n\n    examples.forEach((example) => {\n      //Calculate the df\n      const ex_res = doExample(example);\n      tf[example.exampleId] = ex_res.tf;\n    });\n\n    examples.forEach((example) => {\n      tfIdf[example.exampleId] = {};\n      Object.keys(this.df.items).forEach((word) => {\n        tfIdf[example.exampleId][word] = Math.log1p(\n          tf[example.exampleId].get(word) / this.df.get(word)\n        );\n      });\n    });\n  }\n}\n\nexport default TFIDFTransformer;\n","export namespace GenericWorkerTypes {\n  export enum EWorkerName {\n    index = \"index\",\n    dataLoader = \"dataLoading\",\n    ai = \"ai\",\n  }\n\n  export enum ERquestOrResponesOrUpdate {\n    request = \"request\",\n    response = \"response\",\n    update = \"update\",\n  }\n\n  export interface GenericEvent {\n    workerName: EWorkerName;\n    direction: ERquestOrResponesOrUpdate;\n    payload: unknown;\n    requestId: number;\n    kind: unknown;\n  }\n\n  export interface RequestEvent extends GenericEvent {\n    direction: ERquestOrResponesOrUpdate.request;\n  }\n\n  export interface ResponseEvent extends GenericEvent {\n    direction: ERquestOrResponesOrUpdate.response;\n  }\n\n  export interface UpdateEvent extends GenericEvent {\n    direction: ERquestOrResponesOrUpdate.update;\n  }\n}\n","import Data from \"../..//data_clients/datainterfaces\";\nimport { GenericWorkerTypes } from \"../common/datatypes\";\n\nexport type SignificantTerm = { word: string; score: number };\nexport namespace NSIndexWorker {\n  export enum IndexRequestMessageKind {\n    startIndexing = \"startIndexing\",\n    startQuery = \"startQuery\",\n    startInit = \"startInit\",\n    startSignificantTerms = \"startSignificantTerms\",\n  }\n\n  export enum IndexResponseMessageKind {\n    endIndexing = \"endIndexing\",\n    endQuery = \"endQuery\",\n    endInit = \"endInit\",\n    endSignificantTerms = \"endSignificantTerms\",\n  }\n\n  interface IndexEventBase extends GenericWorkerTypes.GenericEvent {\n    workerName: GenericWorkerTypes.EWorkerName.index;\n    requestId: number;\n    payload: unknown;\n  }\n\n  type RequestEvent = IndexEventBase &\n    GenericWorkerTypes.RequestEvent & {\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request;\n      kind: IndexRequestMessageKind;\n    };\n  type ResponseEvent = IndexEventBase &\n    GenericWorkerTypes.ResponseEvent & {\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.response;\n      kind: IndexResponseMessageKind;\n    };\n  export type SearchResult = {\n    exampleId: string;\n    score: number;\n  };\n  export namespace Request {\n    export interface IStartIndex extends RequestEvent {\n      kind: IndexRequestMessageKind.startIndexing;\n      payload: {\n        examples: Data.Example[];\n      };\n    }\n\n    export interface IStartQuery extends RequestEvent {\n      kind: IndexRequestMessageKind.startQuery;\n      payload: {\n        query: string;\n      };\n    }\n\n    export interface IStartInit extends RequestEvent {\n      kind: IndexRequestMessageKind.startInit;\n      payload: {\n        indexName?: string;\n      };\n    }\n\n    export interface IStartSignificantTerms extends RequestEvent {\n      kind: IndexRequestMessageKind.startSignificantTerms;\n      payload: {\n        labelName: string;\n      };\n    }\n\n    export type TRequests =\n      | IStartQuery\n      | IStartIndex\n      | IStartInit\n      | IStartSignificantTerms;\n  }\n  export namespace Response {\n    export interface IEndIndex extends ResponseEvent {\n      kind: IndexResponseMessageKind.endIndexing;\n      payload: {\n        numInserted: number;\n      };\n    }\n\n    export interface IEndQuery extends ResponseEvent {\n      kind: IndexResponseMessageKind.endQuery;\n      payload: {\n        results: SearchResult[];\n      };\n    }\n\n    export interface IEndInit extends ResponseEvent {\n      kind: IndexResponseMessageKind.endInit;\n      payload: {\n        numIndexed: number;\n      };\n    }\n\n    export interface IEndSignificantTerms extends ResponseEvent {\n      kind: IndexResponseMessageKind.endSignificantTerms;\n      payload: {\n        terms: SignificantTerm[];\n        labelName: string;\n      };\n    }\n\n    export type TResponse =\n      | IEndQuery\n      | IEndIndex\n      | IEndInit\n      | IEndSignificantTerms;\n  }\n\n  export interface IIndexSingelton {\n    addDocs: (docs: Data.Example[]) => Promise<{ numInserted: number }>;\n    query: (query: string) => Promise<{ results: SearchResult[] }>;\n    initializeIndex: (indexName?: string) => Promise<{ numIndexed: number }>;\n    addLabel?: (exampleId: string, label: string) => Promise<boolean>;\n    getSignificantTermsForLabel: (\n      labelName: string\n    ) => Promise<{ terms: SignificantTerm[]; labelName: string }>;\n    saveToDisk?: () => void;\n  }\n}\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/ndx_worker.bundle.worker.js\");\n}\n","import Worker from \"worker-loader!*\";\nimport { GenericWorkerTypes } from \"./datatypes\";\n\nabstract class WorkerSingletonBase {\n  protected static instance: WorkerSingletonBase;\n  initialized: boolean;\n  protected requestId: number;\n  protected responseListeners: Record<string, (evt: MessageEvent) => void>;\n  protected worker: Worker;\n\n  protected constructor(workerInstance: any) {\n    this.initialized = false;\n    this.requestId = 0;\n    this.responseListeners = {};\n    this.worker = workerInstance;\n  }\n\n  protected nextRequestId() {\n    this.requestId++;\n    return this.requestId;\n  }\n\n  registerResponseHandler<T extends GenericWorkerTypes.ResponseEvent>(\n    requestId: number\n  ): Promise<T[\"payload\"]> {\n    return new Promise((resolve) => {\n      const responseHandler = (event: MessageEvent<T>) => {\n        if (event.data.kind && event.data.requestId === requestId) {\n          this.worker.removeEventListener(\n            \"message\",\n            this.responseListeners[requestId]\n          );\n          delete this.responseListeners[requestId];\n          resolve(event.data.payload);\n        }\n      };\n      this.responseListeners[requestId] = responseHandler;\n      this.worker.addEventListener(\"message\", responseHandler);\n    });\n  }\n}\n\nexport default WorkerSingletonBase;\n","function logger(...message: any) {\n  if (process.env.NODE_ENV === \"development\") {\n    // eslint-disable-next-line no-console\n    console.log(message);\n  }\n}\n\nexport default logger;\n\nexport enum EventKinds {\n  tfidf = \"tfidf\",\n  insertToDb = \"insertToDb\",\n  trainSVM = \"trainSVM\",\n  vectorize = \"vectorize\",\n  validateModel = \"validateModel\",\n}\n","import { NSIndexWorker } from \"./indexWorkerTypes\";\nimport Worker from \"worker-loader!./ndx_worker\";\nimport Data from \"../..//data_clients/datainterfaces\";\nimport { GenericWorkerTypes } from \"../common/datatypes\";\nimport WorkerSingletonBase from \"../..//workers/common/BaseWorker\";\nimport logger from \"../../utils/logger\";\n\nexport class IndexWorkerSingleton\n  extends WorkerSingletonBase\n  implements NSIndexWorker.IIndexSingelton {\n  private constructor() {\n    super(new Worker());\n  }\n\n  public static getInstance(): IndexWorkerSingleton {\n    if (IndexWorkerSingleton.instance === undefined) {\n      IndexWorkerSingleton.instance = new IndexWorkerSingleton();\n    }\n    return IndexWorkerSingleton.instance as IndexWorkerSingleton;\n  }\n\n  public initializeIndex(indexName?: string) {\n    const requestId = this.nextRequestId();\n    const message: NSIndexWorker.Request.IStartInit = {\n      workerName: GenericWorkerTypes.EWorkerName.index,\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request,\n      requestId,\n      kind: NSIndexWorker.IndexRequestMessageKind.startInit,\n      payload: {\n        indexName,\n      },\n    };\n    this.worker.postMessage(message);\n    const me = this;\n    return this.registerResponseHandler<NSIndexWorker.Response.IEndInit>(\n      requestId\n    ).then((response) => {\n      me.initialized = true;\n      return response;\n    });\n  }\n\n  public addDocs(examples: Data.Example[]) {\n    if (!this.initialized) {\n      throw new Error(\"The index is not initialized yet\");\n    }\n    const requestId = this.nextRequestId();\n\n    const message: NSIndexWorker.Request.IStartIndex = {\n      workerName: GenericWorkerTypes.EWorkerName.index,\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request,\n\n      kind: NSIndexWorker.IndexRequestMessageKind.startIndexing,\n      requestId,\n      payload: {\n        examples,\n      },\n    };\n    this.worker.postMessage(message);\n    return this.registerResponseHandler<NSIndexWorker.Response.IEndIndex>(\n      requestId\n    );\n  }\n\n  public getSignificantTermsForLabel(labelName: string) {\n    if (!this.initialized) {\n      logger(\"Index wasn't initialized\");\n      return Promise.reject();\n    }\n\n    const requestId = this.nextRequestId();\n    const message: NSIndexWorker.Request.IStartSignificantTerms = {\n      workerName: GenericWorkerTypes.EWorkerName.index,\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request,\n\n      kind: NSIndexWorker.IndexRequestMessageKind.startSignificantTerms,\n      requestId,\n      payload: {\n        labelName,\n      },\n    };\n\n    this.worker.postMessage(message);\n    return this.registerResponseHandler<NSIndexWorker.Response.IEndSignificantTerms>(\n      requestId\n    );\n  }\n\n  public query(query: string) {\n    if (!this.initialized) {\n      throw new Error(\"The index is not initialized yet\");\n    }\n    const requestId = this.nextRequestId();\n    const message: NSIndexWorker.Request.IStartQuery = {\n      workerName: GenericWorkerTypes.EWorkerName.index,\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request,\n      kind: NSIndexWorker.IndexRequestMessageKind.startQuery,\n      requestId,\n      payload: {\n        query,\n      },\n    };\n    this.worker.postMessage(message);\n    return this.registerResponseHandler<NSIndexWorker.Response.IEndQuery>(\n      requestId\n    );\n  }\n}\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/ai_worker.bundle.worker.js\");\n}\n","import { GenericWorkerTypes } from \"../common/datatypes\";\n\nnamespace NSAIWorker {\n  export enum AIRequestMessageKind {\n    startVectorize = \"startVectorize\",\n    startFitPredict = \"startFitPredict\",\n    startValidation = \"startValidation\",\n  }\n\n  export enum AIResponseMessageKind {\n    endVectorize = \"endVectorize\",\n    endFitPredict = \"endFitPredict\",\n    endValidation = \"endValidation\",\n  }\n\n  export enum AIUpdateMessageKind {\n    updateVectorize = \"updateVectorize\",\n    updateFitPredict = \"updateFitPredict\",\n    updateValidation = \"updateValidation\",\n  }\n\n  interface AIEventBase extends GenericWorkerTypes.GenericEvent {\n    workerName: GenericWorkerTypes.EWorkerName.ai;\n    requestId: number;\n    payload: unknown;\n  }\n\n  type RequestEvent = AIEventBase &\n    GenericWorkerTypes.RequestEvent & {\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request;\n    };\n  type ResponseEvent = AIEventBase &\n    GenericWorkerTypes.ResponseEvent & {\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.response;\n    };\n\n  type UpdateEvent = AIEventBase &\n    GenericWorkerTypes.UpdateEvent & {\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.update;\n      kind: AIUpdateMessageKind;\n    };\n\n  export namespace Request {\n    export interface IStartVectorize extends RequestEvent {\n      kind: AIRequestMessageKind.startVectorize;\n      payload: {\n        method: \"tfidf\" | \"universalSentenceEncoder\";\n      };\n    }\n\n    export interface IStartValidate extends RequestEvent {\n      kind: AIRequestMessageKind.startValidation;\n      payload: {};\n    }\n\n    export interface IStartFitPredict extends RequestEvent {\n      kind: AIRequestMessageKind.startFitPredict;\n      payload: {};\n    }\n\n    export type AIWorkerRequests =\n      | IStartFitPredict\n      | IStartValidate\n      | IStartVectorize;\n  }\n\n  export namespace Response {\n    export interface IEndVectorize extends ResponseEvent {\n      kind: AIResponseMessageKind.endVectorize;\n      payload: {};\n    }\n\n    export interface IEndValidate extends ResponseEvent {\n      kind: AIResponseMessageKind.endValidation;\n      payload: {};\n    }\n\n    export interface IEndFitPredict extends ResponseEvent {\n      kind: AIResponseMessageKind.endFitPredict;\n      payload: {};\n    }\n\n    export type Responses = IEndVectorize | IEndValidate | IEndFitPredict;\n  }\n  export namespace Update {\n    interface UpdatePayload {\n      total: number;\n      done: number;\n      remaining: number;\n      pctRemaining: number;\n    }\n\n    export interface IEndVectorize extends UpdateEvent {\n      kind: AIUpdateMessageKind.updateVectorize;\n      payload: UpdatePayload;\n    }\n\n    export interface IUpdateValidate extends UpdateEvent {\n      kind: AIUpdateMessageKind.updateValidation;\n      payload: UpdatePayload;\n    }\n\n    export interface IUpdateFirPredict extends UpdateEvent {\n      kind: AIUpdateMessageKind.updateFitPredict;\n      payload: UpdatePayload;\n    }\n  }\n}\n\nexport default NSAIWorker;\n","import WorkerSingletonBase from \"../common/BaseWorker\";\nimport Worker from \"worker-loader!./ai_worker\";\nimport NSAIWorker from \"./aiWorkerTypes\";\nimport { GenericWorkerTypes } from \"../common/datatypes\";\n\nclass AIWorkerSingleton extends WorkerSingletonBase {\n  workerName: GenericWorkerTypes.EWorkerName.ai;\n  training: boolean;\n\n  private constructor() {\n    super(new Worker());\n    this.workerName = GenericWorkerTypes.EWorkerName.ai;\n    this.training = false;\n  }\n\n  static getInstance(): AIWorkerSingleton {\n    if (this.instance === undefined) {\n      this.instance = new AIWorkerSingleton();\n    }\n\n    return this.instance as AIWorkerSingleton;\n  }\n\n  private beginVectorization(\n    method: NSAIWorker.Request.IStartVectorize[\"payload\"][\"method\"]\n  ) {\n    const event: NSAIWorker.Request.IStartVectorize = {\n      workerName: this.workerName,\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request,\n      kind: NSAIWorker.AIRequestMessageKind.startVectorize,\n      payload: {\n        method,\n      },\n      requestId: this.nextRequestId(),\n    };\n    this.worker.postMessage(event);\n    return this.registerResponseHandler<NSAIWorker.Response.IEndVectorize>(\n      event.requestId\n    );\n  }\n\n  public beginUniversalVectorizer() {\n    return this.beginVectorization(\"universalSentenceEncoder\");\n  }\n\n  public beginTfidfVectorizer() {\n    return this.beginVectorization(\"tfidf\");\n  }\n\n  public beginValidation() {\n    const event: NSAIWorker.Request.IStartValidate = {\n      workerName: this.workerName,\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request,\n      kind: NSAIWorker.AIRequestMessageKind.startValidation,\n      payload: {},\n      requestId: this.nextRequestId(),\n    };\n    this.worker.postMessage(event);\n    return this.registerResponseHandler<NSAIWorker.Response.IEndVectorize>(\n      event.requestId\n    );\n  }\n\n  public beginFitPredict() {\n    const event: NSAIWorker.Request.IStartFitPredict = {\n      workerName: this.workerName,\n      direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request,\n      kind: NSAIWorker.AIRequestMessageKind.startFitPredict,\n      payload: {},\n      requestId: this.nextRequestId(),\n    };\n    this.worker.postMessage(event);\n    return this.registerResponseHandler<NSAIWorker.Response.IEndVectorize>(\n      event.requestId\n    );\n  }\n\n  public async afterNewLabel() {\n    if (this.training) {\n      return;\n    }\n    this.training = true;\n    await this.beginFitPredict();\n    // await this.beginValidation();\n    this.training = false;\n  }\n}\n\nexport default AIWorkerSingleton;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport TFIDFTransformer from \"../../../backend/workers/aiWorker/workerProcedures/vectorizers/tfidf\";\nimport Data from \"../../../backend/data_clients/datainterfaces\";\nimport { InsertToDBEvent } from \"../../../backend/workers/aiWorker/ai_worker\";\nimport { GenericWorkerTypes } from \"../../../backend/workers/common/datatypes\";\nimport { IndexWorkerSingleton } from \"../../../backend/workers/docIndex/IndexWorkerSingleton\";\nimport { EventKinds } from \"../../../backend/utils/logger\";\nimport AIWorkerSingleton from \"../../../backend/workers/aiWorker/AIWorkerSingleton\";\n\nnamespace ExampleActions {\n  export interface ExampleState {\n    exampleIds: (string | number)[];\n    exampleIdsByDatasetName: Record<string, (string | number)[]>;\n    exampleTermFrequency: Record<string, Record<string, number>>;\n    docFrequency: Record<string, number>;\n  }\n\n  export interface AAddExampleByObject {\n    examples: Data.Example[];\n  }\n}\n\nfunction initialStateFactory(): ExampleActions.ExampleState {\n  return {\n    exampleIds: [],\n    exampleIdsByDatasetName: {},\n    exampleTermFrequency: {},\n    docFrequency: {},\n  };\n}\n\nconst exampleSlice = createSlice({\n  name: \"exampleSlice\",\n  initialState: initialStateFactory(),\n  reducers: {\n    addExamples(\n      state,\n      action: PayloadAction<ExampleActions.AAddExampleByObject>\n    ) {\n      const transformer = new TFIDFTransformer();\n      transformer.fitTransform(action.payload.examples);\n      action.payload.examples.forEach((example) => {\n        state.exampleIds.push(example.exampleId);\n        if (example.datasetName) {\n          const datasetSlice =\n            state.exampleIdsByDatasetName[example.datasetName];\n          if (datasetSlice) {\n            datasetSlice.push(example.exampleId);\n          } else {\n            state.exampleIdsByDatasetName[example.datasetName] = [\n              example.exampleId,\n            ];\n          }\n        }\n      });\n    },\n  },\n});\nconst worker = AIWorkerSingleton.getInstance();\nexport async function addExamples(examples: Data.Example[]) {\n  const event: InsertToDBEvent = {\n    direction: GenericWorkerTypes.ERquestOrResponesOrUpdate.request,\n    requestId: -100,\n    workerName: GenericWorkerTypes.EWorkerName.dataLoader,\n    kind: EventKinds.insertToDb,\n    payload: {\n      examples: examples,\n    },\n  };\n\n  const indexWorkerSingleton = IndexWorkerSingleton.getInstance();\n\n  //@ts-ignore\n\n  worker.worker.postMessage(event);\n  return indexWorkerSingleton.addDocs(examples);\n}\nconst exampleReducer = exampleSlice.reducer;\nexport default exampleReducer;\n","/*\n * Reducer to be used with useReducer not redux.\n * */\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nnamespace SearchTypes {\n  type THas = 1 | -1;\n\n  export interface SearchParams {\n    //We make them null so that we can distinguish from undefined\n    hasLabel: THas | null;\n    hasPrediction: THas | null;\n    label: string | null;\n    predictedLabel: string | null;\n    // confidence: null | {\n    //   lt: number;\n    //   gt: number;\n    //   between: [number, number];\n    // };\n    searchQuery: null | string;\n    hasFilter: boolean;\n  }\n\n  export interface ASetSearchParams {\n    params: Partial<SearchParams>;\n  }\n}\n\nfunction initialStateFactory(): SearchTypes.SearchParams & {\n  everSearched: boolean;\n} {\n  return {\n    hasLabel: null,\n    hasPrediction: null,\n    label: null,\n    searchQuery: null,\n    predictedLabel: null,\n    hasFilter: false,\n    everSearched: false,\n  };\n}\n\nconst searchSlice = createSlice({\n  name: \"classificationSlice\",\n  initialState: initialStateFactory(),\n  reducers: {\n    setSearchParams(\n      state,\n      action: PayloadAction<SearchTypes.ASetSearchParams>\n    ) {\n      Object.entries(action.payload.params).forEach(([key, value]) => {\n        //@ts-ignore\n        state[key] = value;\n      });\n      if (action.payload.params.searchQuery) {\n        state.everSearched = true;\n      }\n      state.hasFilter =\n        state.hasLabel !== null ||\n        state.hasPrediction !== null ||\n        state.label !== null ||\n        state.predictedLabel !== null;\n    },\n  },\n});\nexport default searchSlice;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ntype TModes = \"Regular\" | \"ActiveLearning\";\nexport interface AppModeState {\n  mode: TModes;\n}\ninterface AChangeMode {\n  mode: TModes;\n}\n\nfunction initialStateFactory(): AppModeState {\n  return {\n    mode: \"Regular\",\n  };\n}\n\nconst appModeSlice = createSlice({\n  name: \"appMode\",\n  initialState: initialStateFactory(),\n  reducers: {\n    changeMode(state, action: PayloadAction<AChangeMode>) {\n      state.mode = action.payload.mode;\n    },\n  },\n});\n\nexport default appModeSlice;\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { enableAllPlugins, enableMapSet } from \"immer\";\nimport {\n  Action,\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n} from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  persistReducer,\n  persistStore,\n  PURGE,\n  REGISTER,\n  REHYDRATE,\n} from \"redux-persist\";\n\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport classificationReducer from \"./classification/classificationReducer\";\nimport exampleReducer from \"./examples/exampleState\";\nimport searchSlice from \"../QueryContext/searchReducer\";\nimport appModeSlice from \"./modes/modeReducer\";\n\nexport const res = enableMapSet();\n\nenableAllPlugins();\nconst rootReducer = combineReducers({\n  classificationReducer,\n  exampleReducer,\n  searchReducer: searchSlice.reducer,\n  appMode: appModeSlice.reducer,\n});\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\npersistStore(store);\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport default store;\n","import Dexie from \"dexie\";\nimport \"dexie-observable\";\nimport Data, { AnalyticsData } from \"../data_clients/datainterfaces\";\nimport { IDatabaseChange, IUpdateChange } from \"dexie-observable/api\";\n\nexport type TDBChangeCallback = (changeEvent: IDatabaseChange) => void;\nexport type TableNames =\n  | \"example\"\n  | \"label\"\n  | \"indexCache\"\n  | \"vector\"\n  | \"tfidf\"\n  | \"kfold\";\n\nexport class OurDatabase extends Dexie {\n  example: Dexie.Table<Data.Example, string>;\n  label: Dexie.Table<Data.Label, string>;\n  indexCache: Dexie.Table<Data.SerializedIndex, string>; // stores the search index\n  vector: Dexie.Table<Data.Vector, string>;\n  tfidf: Dexie.Table<Data.TFIDF, string>;\n\n  kfold: Dexie.Table<\n    AnalyticsData.PrecisionRecallKfoldMetric,\n    [Date, number, string]\n  >;\n  changeCallbacks: Record<TableNames, TDBChangeCallback[]>;\n\n  public addTableEventListener(\n    tableName: TableNames,\n    callback: TDBChangeCallback\n  ) {\n    this.changeCallbacks[tableName].push(callback);\n  }\n\n  public removeTableEventListener(\n    tableName: TableNames,\n    callback: TDBChangeCallback\n  ) {\n    this.changeCallbacks[tableName] = this.changeCallbacks[tableName].filter(\n      (x) => x !== callback\n    );\n  }\n\n  constructor() {\n    super(\"OurDatabase\");\n    this.version(8).stores({\n      example:\n        \"exampleId,datasetName,label,hasLabel,hasPrediction,[hasPrediction+hasLabel],predictedLabel,[predictedLabel+label],[predictedLabel+hasLabel],confidence,hasNegativeOrRejectedLabel\",\n      label: \"name\",\n      indexCache: \"name\",\n      vector: \"exampleId,label,hasLabel,hasNegativeOrRejectedLabel\",\n      tfidf: \"exampleId,label,hasLabel,hasNegativeOrRejectedLabel\",\n      kfold: \"[timestamp+kNumber+label],[timestamp+label]\",\n    });\n    this.example = this.table(\"example\");\n    this.label = this.table(\"label\");\n    this.indexCache = this.table(\"indexCache\");\n    this.vector = this.table(\"vector\");\n    this.tfidf = this.table(\"tfidf\");\n    this.kfold = this.table(\"kfold\");\n    this.changeCallbacks = {\n      example: [],\n      label: [],\n      indexCache: [],\n      vector: [],\n      tfidf: [],\n      kfold: [],\n    };\n  }\n}\n\nfunction gatherLabelChangeCount(\n  change: IDatabaseChange,\n  labelChangeAccumulator: Record<string, number>\n) {\n  if (\n    change.table === \"example\" &&\n    change.type === 2 //DatabaseChangeType.Update\n  ) {\n    change = change as IUpdateChange;\n    const oldLabel = (change.oldObj as Data.Example).label;\n    const newLabel = (change.obj as Data.Example).label;\n    if (newLabel === oldLabel) {\n      //do nothing\n    } else {\n      if (oldLabel !== undefined) {\n        labelChangeAccumulator[oldLabel] =\n          labelChangeAccumulator[oldLabel] - 1 || -1;\n      }\n      if (newLabel !== undefined) {\n        labelChangeAccumulator[newLabel] =\n          labelChangeAccumulator[newLabel] + 1 || +1;\n      }\n    }\n  }\n}\n\nasync function updateLabelCount(labelName: string, difference: number) {\n  const label = await mainThreadDB.label\n    .where(\"name\")\n    .equals(labelName)\n    .first();\n  if (label) {\n    const newCount = label.count + difference;\n    return mainThreadDB.label.update(labelName, { count: newCount });\n  } else {\n    return Promise.reject(`Couldn't find label \n    ${labelName} in db`);\n  }\n}\n\nfunction initatiateMainThreadDB() {\n  const mainThreadDB = new OurDatabase();\n  mainThreadDB.on(\"changes\", (changes) => {\n    const labelChangeAccumulator: Record<string, number> = {};\n    changes.forEach((change) => {\n      gatherLabelChangeCount(change, labelChangeAccumulator);\n\n      const callbacks =\n        mainThreadDB.changeCallbacks[change.table as TableNames];\n      callbacks.forEach((callback) => callback(change));\n    });\n    Promise.all(\n      Object.entries(labelChangeAccumulator).map(([name, dif]) =>\n        updateLabelCount(name, dif)\n      )\n    );\n    if (Object.keys(labelChangeAccumulator).length) {\n    }\n  });\n  return mainThreadDB;\n}\n\nconst mainThreadDB = initatiateMainThreadDB();\n\nconst initiateWorkerDB = () => {\n  const workerDB = new OurDatabase();\n  return workerDB;\n};\nconst workerDB = initiateWorkerDB();\n\nexport { mainThreadDB, workerDB };\n","import React from \"react\";\nimport { useTypedSelector } from \"../redux-state/rootState\";\nimport { IndexWorkerSingleton } from \"../../backend/workers/docIndex/IndexWorkerSingleton\";\nimport { mainThreadDB } from \"../../backend/database/database\";\nimport intersection from \"lodash/intersection\";\nimport { useQuery } from \"react-query\";\nimport logger from \"../../backend/utils/logger\";\n\nconst indexWorkerSingleton = IndexWorkerSingleton.getInstance();\nfunction useSearchQuery() {\n  const searchParams = useTypedSelector((state) => state.searchReducer);\n\n  const searchFunction = React.useCallback(async () => {\n    logger(\"Calling search\", searchParams);\n    const criteria = {\n      hasLabel: searchParams.hasLabel || undefined,\n      hasPrediction: searchParams.hasPrediction || undefined,\n      label: searchParams.label || undefined,\n      predictedLabel: searchParams.predictedLabel || undefined,\n    };\n    Object.keys(criteria).forEach(\n      //@ts-ignore\n      (key) => criteria[key] === undefined && delete criteria[key]\n    );\n\n    const filterFunction = () => {\n      return (!searchParams.hasFilter\n        ? mainThreadDB.example.toCollection()\n        : mainThreadDB.example.where(criteria)\n      )\n\n        .primaryKeys()\n        .then((keys) => {\n          logger(`Got back ${keys.length} from filter`);\n          logger(\"Filter was\", searchParams);\n          return keys;\n        });\n    };\n    if (\n      searchParams.searchQuery !== null &&\n      searchParams.searchQuery.length > 0\n    ) {\n      const searchQuery = searchParams.searchQuery;\n      return filterFunction().then(async (filterResult) => {\n        const searchResults = await indexWorkerSingleton.query(searchQuery);\n        logger(\n          `Search for \"${searchQuery}\" and got ${searchResults.results.length} results`\n        );\n        return intersection(\n          searchResults.results.map((x) => x.exampleId),\n          filterResult\n        );\n      });\n    } else {\n      return filterFunction();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  return useQuery([\"search\", searchParams], searchFunction);\n}\n\nexport default useSearchQuery;\n","import React, { FunctionComponent } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  \"@keyframes active\": {\n    \"0%\": {\n      webkitTransform: \"scale(.1)\",\n      opacity: \"1\",\n      transform: \"scale(.1)\",\n    },\n    \"70%\": {\n      webkitTransform: \"scale(2.5)\",\n      opacity: \"0\",\n      transform: \"scale(2.5)\",\n    },\n    \"100%\": {\n      opacity: \"0\",\n    },\n  },\n  beaconContainer: {\n    position: \"relative\",\n  },\n\n  beacon: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    backgroundColor: theme.palette.secondary.light,\n    height: theme.spacing(1),\n    width: theme.spacing(1),\n    borderRadius: \"50%\",\n    webkitTransform: \"translateX(-50%) translateY(-50%)\",\n    \"&:before\": {\n      position: \"absolute\",\n      content: '\"\"',\n      height: theme.spacing(1),\n      width: theme.spacing(1),\n      left: \"0\",\n      top: \"0\",\n      backgroundColor: \"transparent\",\n      borderRadius: \"50%\",\n      boxShadow: `0px 0px 2px 2px ${theme.palette.secondary.main}`,\n      animationName: \"$active\",\n      animationDuration: \"2s\",\n      animationTimingFunction: \"linear\",\n      animationIterationCount: \"infinite\",\n    },\n  },\n}));\n\nexport const Beacon: FunctionComponent<{ show: boolean }> = ({ show }) => {\n  const classes = useStyles();\n  if (!show) {\n    return null;\n  }\n  return (\n    <span className={classes.beaconContainer}>\n      <span className={classes.beacon} />\n    </span>\n  );\n};\n\nexport default Beacon;\n","import React, { FunctionComponent } from \"react\";\nimport debounce from \"@material-ui/core/utils/debounce\";\nimport searchSlice from \"../../QueryContext/searchReducer\";\nimport { useTypedSelector } from \"../../redux-state/rootState\";\nimport useSearchQuery from \"../../QueryContext/useSearchQuery\";\nimport { useDispatch } from \"react-redux\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Beacon from \"../Beacon\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  resultCount: {\n    margin: theme.spacing(0, 1),\n    fontWeight: \"bold\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\nconst SearchBar: FunctionComponent = () => {\n  const classes = useStyles();\n\n  const { searchQuery, everSearched } = useTypedSelector(\n    (state) => state.searchReducer\n  );\n  const [value, setValue] = React.useState<string | undefined>(\n    searchQuery || undefined\n  );\n  const exampleIds = useSearchQuery();\n  const dispatch = useDispatch();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedUpdate = React.useCallback(\n    debounce((e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      dispatch(\n        searchSlice.actions.setSearchParams({\n          params: { searchQuery: e.target.value },\n        })\n      );\n    }, 250),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(e.target.value);\n    debouncedUpdate(e);\n  };\n\n  React.useEffect(() => {\n    if (searchQuery) {\n      setValue(searchQuery);\n    }\n  }, [searchQuery]);\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n\n      <InputBase\n        placeholder=\"Search…\"\n        value={value}\n        onChange={handleChange}\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n        endAdornment={\n          <InputAdornment position={\"end\"}>\n            <span className={classes.resultCount}>\n              {\" \"}\n              {exampleIds.data?.length}\n            </span>\n          </InputAdornment>\n        }\n      />\n      <Fade in={exampleIds.isLoading}>\n        <LinearProgress />\n      </Fade>\n      <Beacon show={!everSearched} />\n    </div>\n    // <FilterCheckboxes />\n  );\n};\nexport default SearchBar;\n","import React, { FunctionComponent } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { FormGroup } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useTypedSelector } from \"../../redux-state/rootState\";\nimport searchSlice from \"../../QueryContext/searchReducer\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  root: {},\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n  },\n  checkedIcon: {},\n});\n\nconst FilterCheckboxes: FunctionComponent = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const state = useTypedSelector((state) => state.searchReducer);\n  return (\n    <FormGroup row style={{ display: \"inline\" }}>\n      <FormControlLabel\n        labelPlacement={\"bottom\"}\n        control={\n          <Checkbox\n            checked={state.hasLabel === 1}\n            onChange={(e, v) =>\n              dispatch(\n                searchSlice.actions.setSearchParams({\n                  params: { hasLabel: v ? 1 : null },\n                })\n              )\n            }\n            value={state.hasLabel === 1}\n          />\n        }\n        label={<span style={{ fontSize: \"0.75rem\" }}>Show Labeled</span>}\n      />\n      <FormControlLabel\n        classes={classes}\n        labelPlacement={\"bottom\"}\n        control={\n          <Checkbox\n            size={\"small\"}\n            style={{ fontSize: \"0.5rem\" }}\n            checked={state.hasLabel === -1}\n            onChange={(e, v) =>\n              dispatch(\n                searchSlice.actions.setSearchParams({\n                  params: { hasLabel: v ? -1 : null },\n                })\n              )\n            }\n            value={state.hasLabel === -1}\n          />\n        }\n        label={<span style={{ fontSize: \"0.75rem\" }}>Hide Labeled</span>}\n      />\n\n      <FormControlLabel\n        labelPlacement={\"bottom\"}\n        control={\n          <Checkbox\n            checked={state.hasPrediction === 1}\n            onChange={(e, v) =>\n              dispatch(\n                searchSlice.actions.setSearchParams({\n                  params: { hasPrediction: v ? 1 : null },\n                })\n              )\n            }\n            value={state.hasPrediction === 1}\n          />\n        }\n        label={<span style={{ fontSize: \"0.75rem\" }}>Show Predicted</span>}\n      />\n      <FormControlLabel\n        labelPlacement={\"bottom\"}\n        control={\n          <Checkbox\n            checked={state.hasPrediction === -1}\n            onChange={(e, v) =>\n              dispatch(\n                searchSlice.actions.setSearchParams({\n                  params: { hasPrediction: v ? -1 : null },\n                })\n              )\n            }\n            value={state.hasPrediction === -1}\n          />\n        }\n        label={<span style={{ fontSize: \"0.75rem\" }}>Hide Predicted</span>}\n      />\n    </FormGroup>\n  );\n};\n\nexport default FilterCheckboxes;\n","import React from \"react\";\nimport {\n  mainThreadDB,\n  OurDatabase,\n  TableNames,\n  TDBChangeCallback,\n} from \"./database\";\nimport { QueryKey, useQuery } from \"react-query\";\n\nfunction useDatabase<T>(\n  queryKey: QueryKey,\n  table: TableNames,\n  dbQuery: (db: OurDatabase) => Promise<T>,\n  changeKey: string | undefined\n) {\n  const query = useQuery(queryKey, () => dbQuery(mainThreadDB));\n  React.useEffect(() => {\n    const resetQueryCallback: TDBChangeCallback = (change) => {\n      if (change.table === table) {\n        if (changeKey === undefined || changeKey === change.key) {\n          query.refetch();\n        }\n      }\n    };\n    mainThreadDB.addTableEventListener(table, resetQueryCallback);\n    return () => {\n      mainThreadDB.removeTableEventListener(table, resetQueryCallback);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return query;\n}\nexport function useExampleCount() {\n  const exampleCountQuery = useDatabase(\n    \"exampleCount\",\n    \"example\",\n    (db) => db.example.count(),\n    undefined\n  );\n  return exampleCountQuery;\n}\nexport function useLabelCount() {\n  const exampleCountQuery = useDatabase(\n    \"labelCount\",\n    \"label\",\n    (db) => db.label.count(),\n    undefined\n  );\n  return exampleCountQuery;\n}\n\nexport function usePredictionCount() {\n  const exampleCountQuery = useDatabase(\n    \"predictionCount\",\n    \"example\",\n    (db) => db.example.where({ hasPrediction: 1 }).count(),\n    undefined\n  );\n  return exampleCountQuery;\n}\nexport default useDatabase;\n","import React, { FunctionComponent } from \"react\";\nimport { useTypedSelector } from \"../../redux-state/rootState\";\nimport { useDispatch } from \"react-redux\";\nimport appModeSlice from \"../../redux-state/modes/modeReducer\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { usePredictionCount } from \"../../../backend/database/useDatabase\";\n\nconst ActiveLearningToggleContainer: FunctionComponent = () => {\n  const mode = useTypedSelector((state) => state.appMode.mode);\n  const predictionCountQuery = usePredictionCount();\n  const dispatch = useDispatch();\n  const handleChange = () => {\n    const nextMode = mode === \"Regular\" ? \"ActiveLearning\" : \"Regular\";\n    dispatch(appModeSlice.actions.changeMode({ mode: nextMode }));\n  };\n  if (!predictionCountQuery.data) {\n    return null;\n  }\n  return (\n    <FormControlLabel\n      labelPlacement={\"bottom\"}\n      control={\n        <Switch value={mode === \"ActiveLearning\"} onChange={handleChange} />\n      }\n      label={\"Active Learning\"}\n    />\n  );\n};\n\nexport default ActiveLearningToggleContainer;\n","import fileDownload from \"js-file-download\";\nimport { mainThreadDB } from \"../../../backend/database/database\";\nimport * as Papa from \"papaparse\";\nimport React, { FunctionComponent } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Button } from \"@material-ui/core\";\nimport { useExampleCount } from \"../../../backend/database/useDatabase\";\n\nasync function downloadResults() {\n  const examples = await mainThreadDB.example\n    .orderBy([\"hasPrediction\", \"hasLabel\"])\n    .reverse()\n    .toArray();\n  const example = examples[0];\n  const metaDataKeys = Object.keys(example.metadata || {});\n  const columns = [\n    \"exampleId\",\n    \"content\",\n    \"label\",\n    \"predictedLabel\",\n    \"confidence\",\n    ...metaDataKeys,\n  ];\n  const formatedExamples = examples.map((ex) => ({\n    ...ex,\n    ...(ex.metadata || {}),\n  }));\n  const csv = Papa.unparse({ fields: columns, data: formatedExamples });\n  fileDownload(csv, \"ylabalResults.csv\", \"text/csv\");\n}\n\nconst DownloadButton: FunctionComponent = () => {\n  const [downloadFunc, downloadStatus] = useMutation(downloadResults);\n  const exampleCountQuery = useExampleCount();\n  if (!exampleCountQuery.data) {\n    return null;\n  }\n  return (\n    <Button\n      variant=\"contained\"\n      color={\"primary\"}\n      onClick={() => downloadFunc()}\n      disabled={downloadStatus.isLoading}\n    >\n      Download\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","import React, { FunctionComponent } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DownloadButton from \"./DownloadButton\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { mainThreadDB } from \"../../../backend/database/database\";\nimport { useExampleCount } from \"../../../backend/database/useDatabase\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    background: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n  },\n  button: {\n    background: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    \"&:hover\": {\n      backgroundColor: theme.palette.error.dark,\n    },\n  },\n}));\nasync function handleDelete() {\n  await mainThreadDB.delete();\n  localStorage.removeItem(\"persist:root\");\n  window.location.reload();\n}\nexport const DeleteAllButton: FunctionComponent = () => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const classes = useStyles();\n  const exampleCountQuery = useExampleCount();\n  if (!exampleCountQuery.data) {\n    return null;\n  }\n  return (\n    <>\n      <Button onClick={() => setOpen(true)} className={classes.button}>\n        Start Over\n      </Button>\n      <Dialog color={\"danger\"} open={open} onClose={() => setOpen(false)}>\n        <DialogTitle className={classes.header}>\n          <Typography variant={\"h3\"}>Delete All Data ?</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant={\"h4\"} gutterBottom={true}>\n            Your about to delete all of the work you've done.\n          </Typography>\n          <Typography variant={\"h4\"} gutterBottom={true}>\n            Are you sure you want to ?\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <DownloadButton />\n          <Button\n            variant={\"outlined\"}\n            onClick={handleDelete}\n            className={classes.button}\n          >\n            Yes I'm Sure\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\nexport default DeleteAllButton;\n","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => ({\n  \"@global\": {\n    \".github-corner:hover .octo-arm\": {\n      animation: \"octocat-wave 560ms ease-in-out\",\n    },\n    \"@keyframes octocat-wave\": {\n      \"0%, 100%\": {\n        transform: \"rotate(0)\",\n      },\n      \"20%, 60%\": {\n        transform: \"rotate(-25deg)\",\n      },\n      \"40%, 80%\": {\n        transform: \"rotate(10deg)\",\n      },\n    },\n    \"@media (max-width: 500px)\": {\n      \".github-corner:hover .octo-arm\": {\n        animation: \"none\",\n      },\n      \".github-corner .octo-arm\": {\n        animation: \"octocat-wave 560ms ease-in-out\",\n      },\n    },\n  },\n}));\n\nconst ForkOnGithub = () => {\n  useStyles();\n  return (\n    <a\n      href=\"https://github.com/LightTag/ylabel2\"\n      className=\"github-corner\"\n      aria-label=\"View source on GitHub\"\n      /* eslint-disable-next-line react/jsx-no-target-blank */\n      target={\"_blank\"}\n    >\n      <svg\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 250 250\"\n        style={{\n          fill: \"#151513\",\n          color: \"#fff\",\n          position: \"absolute\",\n          top: 0,\n          border: 0,\n          right: 0,\n        }}\n        aria-hidden=\"true\"\n      >\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n        <path\n          d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n          fill=\"currentColor\"\n          style={{ transformOrigin: \"130px 106px\" }}\n          className=\"octo-arm\"\n        ></path>\n        <path\n          d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n          fill=\"currentColor\"\n          className=\"octo-body\"\n        ></path>\n      </svg>\n    </a>\n  );\n};\n\nexport default ForkOnGithub;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport SearchBar from \"../searchBar/SearchBar\";\nimport FilterCheckboxes from \"../searchBar/FilterCheckboxes\";\nimport ActiveLearningToggleContainer from \"./ActiveLearningToggleContainer\";\nimport { useTypedSelector } from \"../../redux-state/rootState\";\nimport { Fade } from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport DownloadButton from \"./DownloadButton\";\nimport DeleteAllButton from \"./DeleteAllButton\";\nimport ForkOnGithub from \"./ForkOnGithub\";\nimport { useExampleCount } from \"../../../backend/database/useDatabase\";\n\nexport const AppBarHeight = \"64px\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    regularModeControls: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(3),\n        width: \"auto\",\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    sectionDesktop: {\n      display: \"none\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n        marginRight: theme.spacing(6),\n      },\n    },\n    sectionMobile: {\n      display: \"flex\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"none\",\n      },\n    },\n  })\n);\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [\n    mobileMoreAnchorEl,\n    setMobileMoreAnchorEl,\n  ] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const mode = useTypedSelector((state) => state.appMode.mode);\n  const isActiveLearning = mode === \"ActiveLearning\";\n  const exampleCountQuery = useExampleCount();\n  if (!exampleCountQuery.data) {\n    return null;\n  }\n  const hasExamples = exampleCountQuery.data > 0;\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            YLabel\n          </Typography>\n\n          <ActiveLearningToggleContainer />\n          <Fade in={!isActiveLearning && hasExamples}>\n            <span className={classes.regularModeControls}>\n              <SearchBar />\n            </span>\n          </Fade>\n          <Slide in={!isActiveLearning && hasExamples}>\n            <span className={classes.regularModeControls}>\n              <FilterCheckboxes />\n            </span>\n          </Slide>\n          <div className={classes.grow} />\n\n          <div className={classes.sectionDesktop}>\n            <DeleteAllButton />\n            <DownloadButton />\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n        <ForkOnGithub />\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from \"react-reflex\";\nimport { AppBarHeight } from \"../../appBar/Appbar\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  Left: JSX.Element;\n  Middle: JSX.Element;\n  Right: JSX.Element;\n}\nconst ThreeColumnBody: React.FunctionComponent<Props> = (props) => {\n  const theme = useTheme();\n  return (\n    <ReflexContainer\n      orientation=\"vertical\"\n      style={{\n        height: `calc(100vh - ${AppBarHeight})`,\n        padding: theme.spacing(2),\n      }}\n    >\n      <ReflexElement propagateDimensions flex={0.25}>\n        <div\n          style={{\n            height: \"100%\",\n            maxHeight: \"100%\",\n            overflowY: \"hidden\",\n          }}\n        >\n          {props.Left}\n        </div>\n      </ReflexElement>\n      <ReflexSplitter />\n      <ReflexElement propagateDimensions flex={0.5}>\n        <div\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            overflowY: \"auto\",\n          }}\n        >\n          {props.Middle}\n        </div>\n      </ReflexElement>\n      <ReflexSplitter />\n      <ReflexElement propagateDimensions flex={0.25}>\n        <div\n          style={{\n            height: \"100%\",\n            maxHeight: \"100%\",\n            overflowY: \"hidden\",\n          }}\n        >\n          <div style={{ padding: \"2rem\" }}>{props.Right}</div>\n        </div>\n      </ReflexElement>\n    </ReflexContainer>\n  );\n};\nexport default ThreeColumnBody;\n","class LabselsetColorsManager {\n  colormap: Record<string, string>;\n  size: number;\n  labels: Set<string>;\n\n  constructor() {\n    this.colormap = {};\n    this.size = 0;\n    this.labels = new Set();\n  }\n\n  addLabel(label: string) {\n    if (this.labels.has(label)) {\n    } else {\n      this.labels.add(label);\n      this.recolor();\n    }\n  }\n\n  getLabelColor(label: string) {\n    this.addLabel(label);\n    return this.colormap[label];\n  }\n\n  private recolor() {\n    const s = 0.32;\n    const l = 0.6;\n    let h = 0;\n    const num = this.labels.size;\n    const step = 359 / num;\n    this.colormap = {};\n    this.labels.forEach((label) => {\n      this.colormap[label] = HSLToHex(h, s, l);\n      h += step;\n    });\n  }\n}\n\nfunction HSLToHex(H: number, S: number, L: number): string {\n  const rgb = HSL2RGB(H, S, L);\n  return RGB2HEX(rgb);\n}\n\n/**\n * Convert RGB Array to HEX\n *\n * @param {Array} RGBArray - [R, G, B]\n * @returns {String} 6 digits hex starting with #\n */\nvar RGB2HEX = function (RGBArray: Array<number>): string {\n  var hex = \"#\";\n  RGBArray.forEach(function (value) {\n    if (value < 16) {\n      hex += 0;\n    }\n    hex += value.toString(16);\n  });\n  return hex;\n};\n\n/**\n * Convert HSL to RGB\n *\n * @see {@link http://zh.wikipedia.org/wiki/HSL和HSV色彩空间} for further information.\n * @param {Number} H Hue ∈ [0, 360)\n * @param {Number} S Saturation ∈ [0, 1]\n * @param {Number} L Lightness ∈ [0, 1]\n * @returns {Array} R, G, B ∈ [0, 255]\n */\nvar HSL2RGB = function (H: number, S: number, L: number): Array<number> {\n  H /= 360;\n\n  var q = L < 0.5 ? L * (1 + S) : L + S - L * S;\n  var p = 2 * L - q;\n\n  return [H + 1 / 3, H, H - 1 / 3].map(function (color) {\n    if (color < 0) {\n      color++;\n    }\n    if (color > 1) {\n      color--;\n    }\n    if (color < 1 / 6) {\n      color = p + (q - p) * 6 * color;\n    } else if (color < 0.5) {\n      color = q;\n    } else if (color < 2 / 3) {\n      color = p + (q - p) * 6 * (2 / 3 - color);\n    } else {\n      color = p;\n    }\n    return Math.round(color * 255);\n  });\n};\nconst colorManaer = new LabselsetColorsManager();\nexport default colorManaer;\n","import React, { FunctionComponent } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: \"0.1rem\",\n    padding: \"0.2rem\",\n    boxShadow: \"1px 1px 1px #CDCDCD\",\n    borderRadius: \"2px\",\n\n    cursor: \"pointer\",\n  },\n  term: {},\n  score: {},\n}));\nconst SignificantTerm: FunctionComponent<{\n  term: string;\n  score: number;\n  label: string;\n  searchForTerm: (term: string) => void;\n}> = (props) => {\n  const { term } = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.root} onClick={() => props.searchForTerm(term)}>\n      <div className={classes.term}>{term}</div>\n    </div>\n  );\n};\n\nexport default SignificantTerm;\n","import React, { FunctionComponent } from \"react\";\nimport SignificantTerm from \"./SignificantTerm\";\n\nconst SignificantTermsList: FunctionComponent<{\n  terms: { word: string; score: number }[];\n  searchForTerm: (term: string) => void;\n  label: string;\n}> = (props) => {\n  return (\n    <>\n      {props.terms.slice(0, 22).map((ws) => (\n        <SignificantTerm\n          term={ws.word}\n          score={ws.score}\n          label={props.label}\n          searchForTerm={props.searchForTerm}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default SignificantTermsList;\n","import React, { FunctionComponent } from \"react\";\nimport { useQuery } from \"react-query\";\nimport logger from \"../../../../backend/utils/logger\";\nimport SignificantTermsList from \"./SignificantTermsList\";\nimport { ILabelController } from \"../../../../controllers/controllerInterfaces\";\n\nconst SignificantTermsContainer: FunctionComponent<{\n  label: string;\n  labelController: ILabelController;\n  count: number;\n}> = (props) => {\n  const query = useQuery(\n    [\"sigTerms\", props.label, props.count],\n    () => props.labelController.getSignificantTerms(props.label),\n    { cacheTime: 0 }\n  );\n\n  if (query.isLoading === undefined) {\n    return <div>\"calculating\"</div>;\n  }\n  if (query.isError) {\n    return <div> error</div>;\n  }\n  if (!query.data) {\n    return <div> problem {JSON.stringify(query.isSuccess)}</div>;\n  } else {\n    logger({ label: props.label, terms: query.data.terms.slice(10) });\n  }\n  return (\n    <SignificantTermsList\n      label={props.label}\n      searchForTerm={props.labelController.searchForTerm}\n      terms={query.data.terms}\n    />\n  );\n};\n\nexport default SignificantTermsContainer;\n","import React, { FunctionComponent } from \"react\";\nimport { ILabelController } from \"../../../controllers/controllerInterfaces\";\nimport { Checkbox } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\ninterface Props {\n  labelName: string;\n  labelController: ILabelController;\n}\n\nconst SelectedLabelToggle: FunctionComponent<Props> = React.memo((props) => {\n  const labelName = props.labelName;\n\n  const handleClickHuman = () => {\n    if (props.labelController.filteredLabel === props.labelName) {\n      // Then we are unselecting\n      props.labelController.changeLabelFilter(null, \"human\");\n    } else {\n      props.labelController.changeLabelFilter(labelName, \"human\");\n    }\n  };\n  const handleClickModel = () => {\n    if (props.labelController.filteredPrediction === props.labelName) {\n      // Then we are unselecting\n      props.labelController.changeLabelFilter(null, \"pred\");\n    } else {\n      props.labelController.changeLabelFilter(labelName, \"pred\");\n    }\n  };\n  return (\n    <span>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={props.labelController.filteredLabel === labelName}\n            onChange={handleClickHuman}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        }\n        label=\"Labels\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={props.labelController.filteredPrediction === labelName}\n            onChange={handleClickModel}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            color={\"primary\"}\n          />\n        }\n        label={\"Predictions\"}\n      />\n    </span>\n  );\n});\n\nexport default SelectedLabelToggle;\n","import React, { FunctionComponent } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport colorManaer from \"../../utils/labelsetcolors/labelsetcolors\";\nimport SignificantTermsContainer from \"./significantTerms/SignificantTermsContainer\";\nimport SelectedLabelToggle from \"./SelectedLabelToggle\";\nimport { ILabelController } from \"../../../controllers/controllerInterfaces\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: \"2px\",\n    textOverflow: \"ellipsis\",\n    cursor: \"pointer\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    borderRadius: \"4px\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n    fontSize: \"0.75rem\",\n    display: \"inline-block\",\n    width: \"100%\",\n    maxHeight: \"200px\",\n    position: \"relative\",\n    marginTop: \"1rem\",\n    \"&>label\": {\n      padding: \"0.15rem\",\n      background: \"white\",\n      position: \"absolute\",\n      top: \"-1rem\",\n    },\n  },\n  nameContainer: {\n    textTransform: \"uppercase\",\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n  },\n  termsContainer: {\n    marginTop: \"1rem\",\n\n    border: \"1px solid black\",\n    fontSize: \"10px\",\n    position: \"relative\",\n    display: \"inline-flex\",\n    width: \"100%\",\n    \"flex-wrap\": \"wrap\",\n    \"&>label\": {\n      padding: \"0.15rem\",\n      background: \"white\",\n      position: \"absolute\",\n      top: \"-1rem\",\n\n      fontSize: \"0.7rem\",\n      border: \"1px solid black\",\n      borderBottom: \"none\",\n      borderRadius: \"4px\",\n    },\n  },\n  controlorContainers: {\n    width: \"66%\",\n  },\n  toggleButton: {\n    border: \"0.1rem solid white\",\n    padding: \"0.25rem\",\n    textTransform: \"uppercase\",\n    fontSize: \"0.5rem\",\n  },\n}));\nconst LabelRow: FunctionComponent<{\n  count: number;\n  labelName: string;\n  selected: boolean;\n  labelController: ILabelController;\n  onClick?: (val: string | null) => void;\n  comment?: string;\n}> = React.memo((props) => {\n  const classes = useStyles();\n  const labelName = props.labelName;\n  let style: { border: string; borderColor: string };\n  const color = colorManaer.getLabelColor(labelName);\n  style = React.useMemo(() => {\n    const color = colorManaer.getLabelColor(labelName);\n    return {\n      borderColor: color,\n      border: `1px solid ${color}`,\n    };\n  }, [labelName]);\n\n  const handleClick = () => {\n    if (!props.onClick) {\n      return;\n    }\n    if (props.selected) {\n      props.onClick(null);\n    } else {\n      props.onClick(labelName);\n    }\n  };\n\n  return (\n    <div style={style} className={classes.root} onClick={handleClick}>\n      <label className={classes.nameContainer} style={{ color: color }}>\n        {\" \"}\n        {labelName} - {props.count}{\" \"}\n      </label>\n      <span\n        className={classes.toggleButton}\n        onClick={() =>\n          props.labelController.applyLabelToSearchResults(labelName)\n        }\n      >\n        {\" \"}\n        Label All{\" \"}\n      </span>\n      <SelectedLabelToggle\n        labelName={labelName}\n        labelController={props.labelController}\n      />\n      <span className={classes.termsContainer}>\n        <label>Keywords</label>\n        <SignificantTermsContainer\n          label={labelName}\n          labelController={props.labelController}\n          count={props.count}\n        />\n      </span>\n    </div>\n  );\n});\n\nexport default LabelRow;\n","import React from \"react\";\nimport { useAnnotateAll } from \"../../frontend/components/labelControls/labelControls\";\nimport { useDispatch } from \"react-redux\";\nimport searchSlice from \"../../frontend/QueryContext/searchReducer\";\nimport { ILabelController } from \"../controllerInterfaces\";\nimport { useTypedSelector } from \"../../frontend/redux-state/rootState\";\nimport { IndexWorkerSingleton } from \"../../backend/workers/docIndex/IndexWorkerSingleton\";\n\nexport default function useDefaultLabelController(): ILabelController {\n  const dispatch = useDispatch();\n  const {\n    label: filteredLabel,\n    predictedLabel: filteredPrediction,\n  } = useTypedSelector((state) => state.searchReducer);\n\n  const [applyLabelToSearchResults] = useAnnotateAll();\n  return React.useMemo(() => {\n    const searchForTerm = (term: string) => {\n      dispatch(\n        searchSlice.actions.setSearchParams({\n          params: { searchQuery: term },\n        })\n      );\n    };\n    const changeLabelFilter = (\n      labelName: string | null,\n      source: \"human\" | \"pred\"\n    ) => {\n      const change: Record<string, string | null> = {};\n      if (source === \"human\") {\n        change[\"label\"] = labelName;\n      }\n      if (source === \"pred\") {\n        change[\"predictedLabel\"] = labelName;\n      }\n\n      dispatch(searchSlice.actions.setSearchParams({ params: change }));\n    };\n    return {\n      getSignificantTerms: (labelName) =>\n        IndexWorkerSingleton.getInstance().getSignificantTermsForLabel(\n          labelName\n        ),\n      applyLabelToSearchResults,\n      searchForTerm,\n      changeLabelFilter,\n      filteredLabel,\n      filteredPrediction,\n    };\n  }, [applyLabelToSearchResults, dispatch, filteredLabel, filteredPrediction]);\n}\n","import React, { FunctionComponent } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { useMutation } from \"react-query\";\nimport { mainThreadDB } from \"../../../backend/database/database\";\nimport useSearchQuery from \"../../QueryContext/useSearchQuery\";\nimport Data from \"../../../backend/data_clients/datainterfaces\";\nimport useDatabase, {\n  useLabelCount,\n} from \"../../../backend/database/useDatabase\";\nimport LabelRow from \"./LabelRow\";\nimport useDefaultLabelController from \"../../../controllers/labelControllers/DefaultLabelController\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Beacon from \"../Beacon\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst AddLabel: FunctionComponent = () => {\n  const labelCount = useLabelCount();\n  const [name, setName] = React.useState<string | undefined>();\n  const [addLabel] = useMutation(async (name: string) => {\n    await mainThreadDB.label.add({ name, kind: \"label\", count: 0 }, name);\n    setName(undefined);\n  });\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <TextField\n        fullWidth={true}\n        label={\"Add a new label\"}\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Beacon show={labelCount.data === 0} />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                size={\"small\"}\n                disabled={name === undefined}\n                color={name ? \"primary\" : undefined}\n                onClick={() => name && addLabel(name)}\n              >\n                <SaveIcon fontSize={\"small\"} />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport function useAnnotateAll() {\n  const exampleIds = useSearchQuery();\n  return useMutation((label: string | null) =>\n    mainThreadDB.transaction(\n      \"rw\",\n      [mainThreadDB.example, mainThreadDB.tfidf, mainThreadDB.vector],\n      async () => {\n        //TODO -- get the rejected labels back into the update\n\n        const labelState: Partial<Data.LabelState> = {\n          label: label || undefined,\n          hasLabel: label !== null ? 1 : -1,\n        };\n\n        await Promise.all(\n          (exampleIds.data || []).map(async (exampleId) => {\n            Promise.all([\n              mainThreadDB.example.update(exampleId, labelState),\n              mainThreadDB.tfidf.update(exampleId, labelState),\n              mainThreadDB.vector.update(exampleId, labelState),\n            ]);\n          })\n        );\n      }\n    )\n  );\n}\n\nconst LabelControls: FunctionComponent = (props) => {\n  const labels = useDatabase(\n    \"labelStats\",\n    \"label\",\n    (db) => db.label.toArray(),\n    undefined\n  );\n  const labelController = useDefaultLabelController();\n  if (!labels.data) {\n    return <div>loading</div>;\n  }\n  return (\n    <>\n      <Typography gutterBottom variant={\"h4\"}>\n        Labels\n      </Typography>\n      <AddLabel />\n      <div\n        style={{\n          flexWrap: \"wrap\",\n          display: \"flex\",\n          width: \"100%\",\n          maxHeight: \"95%\",\n          overflowY: \"auto\",\n          marginTop: \"1rem\",\n        }}\n      >\n        {labels.data.map((label, count) => (\n          <LabelRow\n            labelController={labelController}\n            selected={false}\n            count={label.count}\n            labelName={label.name}\n            key={label.name}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default LabelControls;\n","import useDatabase from \"../../backend/database/useDatabase\";\nimport { sortBy } from \"lodash\";\n\nfunction useActiveLearning() {\n  const query = useDatabase(\n    [\"examples\", \"forAL\"],\n    \"example\",\n    async (db) => {\n      const collection = await db.example.where({\n        hasLabel: -1,\n        hasPrediction: 1,\n      });\n      let items = await collection.toArray();\n      items = sortBy(items, (x) => (x.confidence ? -1 * x.confidence : 0));\n      return { size: collection.count(), items };\n    },\n    undefined\n  );\n  return query;\n}\n\nexport default useActiveLearning;\n","import React, { FunctionComponent } from \"react\";\nimport useActiveLearning from \"./useActiveLearning\";\nimport Data from \"../../backend/data_clients/datainterfaces\";\n\ninterface IContext {\n  currentExample: Data.Example | undefined;\n  goToNext: () => void;\n}\n\nexport const ActiveLearningContext = React.createContext<IContext>(null as any);\n\nconst ActiveLearningContextProvider: FunctionComponent = (props) => {\n  const activeLearningExamplesQuery = useActiveLearning();\n  const [currentExample, setCurrentExample] = React.useState<\n    Data.Example | undefined\n  >(undefined);\n  const [currentCursor, setCurrentCursor] = React.useState<number>(0);\n  const activeLearningExamples = activeLearningExamplesQuery.data?.items;\n\n  React.useEffect(() => {\n    setCurrentCursor(0);\n    if (\n      currentCursor === 0 &&\n      currentExample === undefined &&\n      activeLearningExamples !== undefined\n    ) {\n      setCurrentExample(activeLearningExamples[currentCursor]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeLearningExamples]);\n\n  const goToNext = () => {\n    const nextCursor = currentCursor + 1;\n    setCurrentCursor(nextCursor);\n    if (activeLearningExamples) {\n      setCurrentExample(activeLearningExamples[nextCursor]);\n    } else {\n      setCurrentExample(undefined);\n    }\n  };\n  const value = React.useMemo(\n    () => ({\n      goToNext,\n      currentExample,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentExample]\n  );\n\n  return (\n    <ActiveLearningContext.Provider value={value}>\n      {props.children}\n    </ActiveLearningContext.Provider>\n  );\n};\n\nexport default ActiveLearningContextProvider;\n","import { mainThreadDB } from \"./database\";\nimport Data from \"../data_clients/datainterfaces\";\nimport AIWorkerSingleton from \"../workers/aiWorker/AIWorkerSingleton\";\nimport logger from \"../utils/logger\";\n\nexport async function rejectLabel(exampleId: string, label: string) {\n  let example: Data.Example | undefined = await mainThreadDB.example.get(\n    exampleId\n  );\n  let rejectedLabels = new Set<string>(example?.rejectedLabels || []);\n  rejectedLabels.add(label);\n  await mainThreadDB.transaction(\n    \"rw\",\n    [mainThreadDB.example, mainThreadDB.tfidf, mainThreadDB.vector],\n    async () => {\n      const labelState: Partial<Data.LabelState> = {\n        hasNegativeOrRejectedLabel: 1,\n        rejectedLabels: Array.from(rejectedLabels),\n      };\n\n      await mainThreadDB.example.update(exampleId, labelState);\n      await mainThreadDB.tfidf.update(exampleId, labelState);\n      await mainThreadDB.vector.update(exampleId, labelState);\n    }\n  );\n  logger(`rejected label ${label} for example ${exampleId}`);\n  const workerController = AIWorkerSingleton.getInstance();\n  workerController.afterNewLabel();\n\n  return;\n}\n\nexport function applyLabel(exampleId: string, labelName: string) {\n  return mainThreadDB.transaction(\n    \"rw\",\n    [mainThreadDB.example, mainThreadDB.tfidf, mainThreadDB.vector],\n    async () => {\n      const example = await mainThreadDB.example.get(exampleId);\n      if (example) {\n        const labelState: Partial<Data.LabelState> = {\n          label: labelName || undefined,\n          hasLabel: labelName !== null ? 1 : -1,\n          hasNegativeOrRejectedLabel:\n            labelName || (example.rejectedLabels || []).length > 0 ? 1 : -1,\n        };\n\n        await Promise.all([\n          mainThreadDB.example.update(exampleId, labelState),\n          mainThreadDB.tfidf.update(exampleId, labelState),\n          mainThreadDB.vector.update(exampleId, labelState),\n        ]);\n      }\n    }\n  );\n}\n","import React, { FunctionComponent } from \"react\";\n\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nimport { ActiveLearningContext } from \"../../active_learning/ActiveLearningContext\";\nimport colorManaer from \"../../utils/labelsetcolors/labelsetcolors\";\nimport AIWorkerSingleton from \"../../../backend/workers/aiWorker/AIWorkerSingleton\";\nimport useDatabase from \"../../../backend/database/useDatabase\";\nimport { applyLabel } from \"../../../backend/database/dbProcesdures\";\nimport Data from \"../../../backend/data_clients/datainterfaces\";\n\ninterface Props {\n  exampleId: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  cbRoot: {\n    display: \"inline\",\n    width: \"fit-content\",\n    maxWidth: \"20%\",\n    textOverflow: \"ellipsis\",\n    cursor: \"pointer\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    borderRadius: \"4px\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\nconst ClassBox: FunctionComponent<{\n  labelName: string;\n  selected: boolean;\n  onClick?: (val: string | null) => void;\n  comment?: string;\n}> = React.memo((props) => {\n  const classes = useStyles();\n  const labelName = props.labelName;\n  const style = React.useMemo(() => {\n    const color = colorManaer.getLabelColor(labelName);\n    if (props.selected) {\n      return {\n        background: color,\n        color: \"white\",\n      };\n    } else {\n      return {\n        borderColor: color,\n        color: color,\n        border: \"1px solid\",\n      };\n    }\n  }, [labelName, props.selected]);\n\n  const activeLearningContext = React.useContext(ActiveLearningContext);\n\n  const handleClick = () => {\n    if (!props.onClick) {\n      return;\n    }\n    if (props.selected) {\n      props.onClick(null);\n    } else {\n      props.onClick(labelName);\n      const workerController = AIWorkerSingleton.getInstance();\n      workerController.afterNewLabel();\n      if (activeLearningContext) {\n        activeLearningContext.goToNext();\n      }\n    }\n  };\n  return (\n    <div\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\" || e.keyCode === 32) {\n          handleClick();\n          e.preventDefault();\n        }\n      }}\n      style={style}\n      className={classes.cbRoot}\n      onClick={handleClick}\n    >\n      {labelName} {props.comment ? ` - ${props.comment}` : null}\n    </div>\n  );\n});\nconst ClassificationRibbon: FunctionComponent<Props> = React.memo((props) => {\n  const { exampleId } = props;\n\n  const labels = useDatabase(\n    \"labels\",\n    \"label\",\n    (db) => db.label.toArray(),\n    undefined\n  );\n  const example = useDatabase(\n    [\"exampleLabel\", exampleId],\n    \"example\",\n    (db) => db.example.get(exampleId),\n    props.exampleId\n  );\n\n  if (labels.data && example.data)\n    return (\n      <div>\n        {labels.data.map((label) => (\n          <span\n            style={\n              //@ts-ignore\n              example.data.rejectedLabels.includes(label.name)\n                ? { opacity: 0.3 }\n                : {}\n            }\n          >\n            <ClassBox\n              labelName={label.name}\n              selected={example?.data?.label === label.name}\n              onClick={() =>\n                applyLabel((example.data as Data.Example).exampleId, label.name)\n              }\n            />\n          </span>\n        ))}\n      </div>\n    );\n  else {\n    return null;\n  }\n});\n\nexport default ClassificationRibbon;\n","import React, { FunctionComponent } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper } from \"@material-ui/core\";\nimport LabselsetColors from \"../../utils/labelsetcolors/labelsetcolors\";\nimport ClassificationRibbon from \"./ClassificationRibbon\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport useDatabase from \"../../../backend/database/useDatabase\";\nimport { ActiveLearningContext } from \"../../active_learning/ActiveLearningContext\";\nimport { rejectLabel } from \"../../../backend/database/dbProcesdures\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useTypedSelector } from \"../../redux-state/rootState\";\n\ninterface Props {\n  exampleId: string;\n  score?: number;\n  addSpanId?: (spanId: string) => void;\n  onLoad?: () => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: \"4px 4px 4px #CDCDCD \",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3),\n    lineHeight: \"2.5rem\",\n  },\n  body: {\n    whiteSpace: \"pre-wrap\",\n    fontSize: \"16px\",\n    lineHeight: \"32px\",\n    \"&>em\": {\n      background: \"yellow\",\n      \"&:focus\": {\n        fontWeight: \"bold\",\n      },\n    },\n  },\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n  ribbon: {\n    height: \"15%\",\n  },\n}));\n\nconst HighlightedBody: FunctionComponent<{ text: string }> = React.memo(\n  (props) => {\n    const searchParams = useTypedSelector((state) => state.searchReducer);\n    let query = searchParams.searchQuery;\n    let text = props.text;\n    const spans: JSX.Element[] = [];\n    if (!query) {\n      spans.push(<span>{props.text}</span>);\n    } else {\n      query = query.toLowerCase();\n      let cursor = text.toLowerCase().search(query);\n\n      while (cursor !== -1) {\n        spans.push(<span>{text.slice(0, cursor)}</span>);\n        const end = cursor + query.length;\n        spans.push(<em tabIndex={0}>{text.slice(cursor, end)}</em>);\n        text = text.slice(end);\n        cursor = text.search(query);\n      }\n      spans.push(<span>{text}</span>);\n    }\n    return <> {spans} </>;\n  }\n);\n\nconst Example: FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  const exampleQuery = useDatabase(\n    [\"example\", props.exampleId],\n    \"example\",\n    (db) => db.example.get(props.exampleId),\n    props.exampleId\n  );\n  const activeLearningContext = React.useContext(ActiveLearningContext);\n  React.useEffect(() => {\n    props.onLoad && props.onLoad();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [exampleQuery.data]);\n  if (exampleQuery.data) {\n    return (\n      <Paper\n        className={classes.root}\n        style={{\n          border: exampleQuery.data?.predictedLabel\n            ? `1px solid ${LabselsetColors.getLabelColor(\n                exampleQuery.data.predictedLabel\n              )}`\n            : undefined,\n        }}\n      >\n        <div className={classes.ribbon}>\n          <Typography variant={\"subtitle1\"} color={\"primary\"}>\n            {props.score || null}\n          </Typography>\n          <ClassificationRibbon exampleId={props.exampleId} />\n        </div>\n        <Divider className={classes.divider} />\n        <div\n          style={{ fontWeight: \"bold\" }}\n          onClick={() => {\n            if (exampleQuery.data && exampleQuery.data.predictedLabel) {\n              rejectLabel(\n                exampleQuery.data.exampleId,\n                exampleQuery.data.predictedLabel\n              );\n              if (activeLearningContext) {\n                activeLearningContext.goToNext();\n              }\n            }\n          }}\n        >\n          {\" \"}\n          {exampleQuery.data?.predictedLabel || null}{\" \"}\n          {exampleQuery.data?.confidence?.toLocaleString(\"en\", {\n            style: \"percent\",\n          }) || null}\n        </div>\n        <Typography className={classes.body} dir={\"auto\"}>\n          <HighlightedBody text={exampleQuery.data.content} />\n        </Typography>\n      </Paper>\n    );\n  } else {\n    return <div>HI</div>;\n  }\n};\n\nexport default Example;\n","import React, { FunctionComponent } from \"react\";\nimport { ActiveLearningContext } from \"./ActiveLearningContext\";\nimport Example from \"../components/example/Example\";\nimport { Button } from \"@material-ui/core\";\nimport { applyLabel, rejectLabel } from \"../../backend/database/dbProcesdures\";\n\nconst ActiveLearningBody: FunctionComponent = () => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const context = React.useContext(ActiveLearningContext);\n  React.useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n  });\n  if (!context) {\n    return <div>Not in an active learning context</div>;\n  }\n  if (context.currentExample === undefined) {\n    return <div>No example in context</div>;\n  }\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (context.currentExample && context.currentExample.predictedLabel) {\n      if (e.key === \"x\") {\n        rejectLabel(\n          context.currentExample.exampleId,\n          context.currentExample.predictedLabel\n        );\n        context.goToNext();\n      }\n      if (e.key === \"a\") {\n        applyLabel(\n          context.currentExample.exampleId,\n          context.currentExample.predictedLabel\n        );\n        context.goToNext();\n      }\n    }\n  };\n  return (\n    <div ref={ref} onKeyDown={onKeyDown} tabIndex={0}>\n      <Example score={1} exampleId={context.currentExample.exampleId} />;\n      <Button onClick={context.goToNext}>Skip</Button>\n    </div>\n  );\n};\n\nexport default ActiveLearningBody;\n","import React, { FunctionComponent } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport AIWorkerSingleton from \"../../backend/workers/aiWorker/AIWorkerSingleton\";\nimport { Fade } from \"@material-ui/core\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst aiWorkerSingleton = AIWorkerSingleton.getInstance();\nconst WorkComp: FunctionComponent = () => {\n  const [working, setWorking] = React.useState<boolean>(false);\n  const calculateTFIDF = async () => {\n    setWorking(true);\n    await aiWorkerSingleton.beginTfidfVectorizer();\n    setWorking(false);\n  };\n  const vectorize = async () => {\n    setWorking(true);\n    await aiWorkerSingleton.beginUniversalVectorizer();\n    setWorking(false);\n  };\n  const trainSVM = async () => {\n    setWorking(true);\n    await aiWorkerSingleton.beginFitPredict();\n    await setWorking(false);\n  };\n\n  const validateModel = async () => {\n    setWorking(true);\n    await aiWorkerSingleton.beginValidation();\n    setWorking(false);\n  };\n\n  return (\n    <>\n      <Button disabled={working} onClick={calculateTFIDF}>\n        Calculate TFIDF\n      </Button>\n      <Button disabled={working} onClick={vectorize}>\n        Vectorize\n      </Button>\n      <Button disabled={working} onClick={trainSVM}>\n        Train SVM\n      </Button>\n      <Button disabled={working} onClick={validateModel} color={\"primary\"}>\n        Val\n      </Button>\n      <Fade in={working}>\n        <LinearProgress variant={\"indeterminate\"} />\n      </Fade>\n    </>\n  );\n};\n\nexport default WorkComp;\n","import React from \"react\";\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowProps,\n} from \"react-virtualized\";\nimport Example from \"../example/Example\";\n\nconst cache = new CellMeasurerCache({\n  fixedWidth: true,\n});\nconst ExampleRenderer: React.FunctionComponent<{\n  exampleId: string;\n  virtualizedRowProps: ListRowProps;\n}> = (props) => (\n  <CellMeasurer\n    cache={cache}\n    columnIndex={0}\n    key={props.virtualizedRowProps.key}\n    parent={props.virtualizedRowProps.parent}\n    rowIndex={props.virtualizedRowProps.index}\n  >\n    {({ measure }) => (\n      <div style={props.virtualizedRowProps.style}>\n        <Example\n          key={props.exampleId}\n          exampleId={props.exampleId}\n          onLoad={measure}\n        />\n      </div>\n    )}\n  </CellMeasurer>\n);\nconst ExampleInfiniteScroll: React.FunctionComponent<{\n  exampleIds: string[];\n}> = (props) => {\n  const examples = props.exampleIds;\n  return (\n    <AutoSizer>\n      {({ height, width }) => (\n        <List\n          rowHeight={cache.rowHeight}\n          rowCount={examples.length}\n          width={width}\n          height={height}\n          rowRenderer={(renderProps) => (\n            <ExampleRenderer\n              virtualizedRowProps={renderProps}\n              exampleId={props.exampleIds[renderProps.index]}\n            />\n          )}\n          deferredMeasurementCache={cache}\n        />\n      )}\n    </AutoSizer>\n  );\n};\n\nexport default ExampleInfiniteScroll;\n","import * as Papa from \"papaparse\";\n\nconst readCsvFile = (file: File) => {\n  return new Promise<Papa.ParseResult<any>>((resolve, reject) => {\n    const parseConfig: Papa.ParseConfig = {\n      worker: false,\n      //@ts-ignore\n      headerPlacement: true,\n      dynamicTyping: true,\n      complete: (result) => resolve(result),\n      error: (error) => reject(error.message),\n      skipEmptyLines: true,\n      header: true,\n    };\n    Papa.parse(file, parseConfig);\n  });\n};\nconst readJSONAsynch = (file: File) => {\n  return new Promise<Array<any>>((resolve, reject) => {\n    let reader = new FileReader();\n    reader.onload = () => {\n      try {\n        const str = reader.result as string;\n        const json = JSON.parse(str);\n        if (!Array.isArray(json)) {\n          // PARSE returns something with type object that has length. So this checks if\n          // we got the right thing\n          reject(\n            \"The JSON you uploaded is a single object. Please convert it to an array of objects, one per example\"\n          );\n        } else {\n          resolve(json);\n        }\n      } catch (e) {\n        reject(\"This JSON has errors. Please validate the JSON and try again\");\n      }\n    };\n    reader.readAsText(file);\n  });\n};\nexport const readUserInputFile = async (file: File) => {\n  let data: any[];\n  if (file.name.endsWith(\"json\")) {\n    data = await readJSONAsynch(file);\n  } else {\n    const papaParseResult = await readCsvFile(file);\n    data = papaParseResult.data;\n  }\n  return data;\n};\n","import React, { FunctionComponent, SyntheticEvent } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { readUserInputFile } from \"./fileReader\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport md5 from \"crypto-js/md5\";\nimport { addExamples } from \"../../redux-state/examples/exampleState\";\nimport Data from \"../../../backend/data_clients/datainterfaces\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useMutation } from \"react-query\";\nimport Fade from \"@material-ui/core/Fade\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst saveExamplesfn = (params: {\n  data: any[] | undefined;\n  key: string | undefined;\n  labelKey: string | undefined;\n}) => {\n  const { data, key, labelKey } = params;\n  const examplesArr: Data.Example[] = [];\n  if (data && key) {\n    data.forEach((ex) => {\n      const metadata = { ...ex };\n      delete metadata[key];\n      examplesArr.push({\n        content: ex[key],\n\n        datasetName: \"test\",\n        exampleId: md5(ex[key]).toString(),\n        label: labelKey ? ex[labelKey] : undefined,\n        hasLabel: labelKey && ex[labelKey] ? 1 : -1,\n        kind: \"example\",\n        hasNegativeOrRejectedLabel: -1,\n        rejectedLabels: [],\n        metadata,\n      });\n    });\n  }\n  return addExamples(examplesArr);\n};\nconst FileUploadButton: FunctionComponent<{\n  afterSubmit?: () => void;\n}> = (props) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const [keys, setKeys] = React.useState<string[]>();\n  const [key, setKey] = React.useState<string>();\n  const [labelKey, setLabelKey] = React.useState<string | undefined>();\n  const [data, setData] = React.useState<any[]>();\n  const [saveExamples, saveStatus] = useMutation(saveExamplesfn);\n  const handleFile = async (e: SyntheticEvent) => {\n    e.preventDefault();\n    if (inputRef) {\n      if (inputRef.current) {\n        if (inputRef.current.files) {\n          const file = inputRef.current.files[0];\n          if (file) {\n            const res = await readUserInputFile(inputRef.current.files[0]);\n            setData(res);\n            setKeys(Object.keys(res[0]));\n            props.afterSubmit && props.afterSubmit();\n          }\n        }\n      }\n    }\n  };\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <input\n          ref={inputRef}\n          accept=\"text/csv, text/tsv, .csv,.tsv, .json\"\n          onChange={handleFile}\n          style={{ display: \"none\" }}\n          id=\"csv-file\"\n          multiple\n          type=\"file\"\n        />\n        <label htmlFor=\"csv-file\">\n          <Button\n            fullWidth={true}\n            variant={\"outlined\"}\n            component=\"span\"\n            color={\"primary\"}\n          >\n            Add A CSV\n          </Button>\n        </label>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          required={true}\n          fullWidth={true}\n          disabled={!keys}\n          onChange={(e) => setKey(e.target.value)}\n          select={true}\n          label={\"Data Column\"}\n          helperText={\"Which column will you be labeling? \"}\n          value={key}\n        >\n          {(keys || []).map((key) => (\n            <MenuItem key={key} value={key}>\n              {key}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth={true}\n          disabled={!key}\n          onChange={(e) => setLabelKey(e.target.value)}\n          select={true}\n          label={\"Label Column\"}\n          helperText={\"Is there a column with labels?  \"}\n          value={key}\n        >\n          <MenuItem key={\"empty\"} value={undefined} disabled={false}>\n            <Typography color={\"error\"}> No Labels </Typography>\n          </MenuItem>\n          {(keys || []).map((k) => (\n            <MenuItem key={k} value={k} disabled={k === key}>\n              {k}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Button\n          color={\"primary\"}\n          variant={\"contained\"}\n          disabled={!key || saveStatus.isLoading}\n          onClick={() => saveExamples({ data, key, labelKey })}\n          fullWidth={true}\n        >\n          <Fade in={!saveStatus.isLoading}>\n            <span> Upload </span>\n          </Fade>\n        </Button>\n        <Fade in={saveStatus.isLoading}>\n          <LinearProgress />\n        </Fade>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FileUploadButton;\n","import React, { FunctionComponent } from \"react\";\nimport { ButtonProps, DialogTitle } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FileUploadButton from \"./simpleDataUpload\";\nimport Button from \"@material-ui/core/Button\";\n\nconst AddDataDialog: FunctionComponent<{\n  open: boolean;\n  onClose: () => void;\n}> = (props) => {\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle>Add Data</DialogTitle>\n      <DialogContent>\n        <FileUploadButton />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport const AddDataDialogWithButton: FunctionComponent<{\n  buttonProps?: ButtonProps;\n  label: string;\n}> = (props) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  return (\n    <>\n      <Button {...props.buttonProps} onClick={() => setOpen(true)}>\n        {props.label}\n      </Button>\n      <AddDataDialog open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n};\nexport default AddDataDialog;\n","import React, { FunctionComponent } from \"react\";\nimport ThreeColumnBody from \"./templates/ThreeColumnBody\";\nimport LabelControls from \"../labelControls/labelControls\";\nimport useSearchQuery from \"../../QueryContext/useSearchQuery\";\nimport ActiveLearningContextProvider from \"../../active_learning/ActiveLearningContext\";\nimport ActiveLearningBody from \"../../active_learning/ActiveLearningBody\";\nimport { useTypedSelector } from \"../../redux-state/rootState\";\nimport { Fade } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport WorkComp from \"../../classifier/workerComp\";\nimport ExampleInfiniteScroll from \"./ExampleInfiniteScroll\";\nimport { AddDataDialogWithButton } from \"../dataUpload/AddDataDialog\";\n\nconst NoDataBody = () => {\n  return (\n    <div style={{ width: \"400px\", margin: \"auto\" }}>\n      <Typography variant={\"h3\"} gutterBottom>\n        No Results\n      </Typography>\n      <Typography variant={\"h5\"} gutterBottom>\n        We searched hard, but the current query doesn't have any matches\n      </Typography>\n    </div>\n  );\n};\n\nconst RegularBody: FunctionComponent = () => {\n  const exampleIds = useSearchQuery();\n  const data = exampleIds.data || [];\n\n  return (\n    <>\n      <Fade in={exampleIds.isLoading}>\n        <div>Loading</div>\n      </Fade>\n      <Fade\n        in={exampleIds.isSuccess && data.length > 0}\n        mountOnEnter\n        unmountOnExit\n      >\n        <ExampleInfiniteScroll exampleIds={data} />\n      </Fade>\n      <Fade\n        in={exampleIds.isSuccess && data.length === 0}\n        mountOnEnter\n        unmountOnExit\n      >\n        <NoDataBody />\n      </Fade>\n    </>\n  );\n};\nconst BodyDispatch: FunctionComponent = () => {\n  const mode = useTypedSelector((state) => state.appMode.mode);\n  const isActiveLearning = mode === \"ActiveLearning\";\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        padding: \"2rem\",\n        maxHeight: \"100%\",\n        overflowY: \"auto\",\n      }}\n    >\n      {isActiveLearning ? (\n        <ActiveLearningContextProvider>\n          <ActiveLearningBody />\n        </ActiveLearningContextProvider>\n      ) : (\n        <RegularBody />\n      )}\n    </div>\n  );\n};\nconst OpenAnnotationBody: FunctionComponent = () => {\n  return (\n    <ThreeColumnBody\n      Left={<LabelControls />}\n      Middle={<BodyDispatch />}\n      Right={\n        <div>\n          <WorkComp />{\" \"}\n          <AddDataDialogWithButton\n            label={\"Add Data\"}\n            buttonProps={{ variant: \"contained\", color: \"primary\" }}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nexport default OpenAnnotationBody;\n","import React, { FunctionComponent } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ThreeColumnBody from \"./templates/ThreeColumnBody\";\nimport { Paper } from \"@material-ui/core\";\nimport ComputerIcon from \"@material-ui/icons/Computer\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DoneIcon from \"@material-ui/icons/GetApp\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport GithubIcon from \"@material-ui/icons/GitHub\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddDataDialog from \"../dataUpload/AddDataDialog\";\n\nconst WelcomeItem: FunctionComponent<{\n  title: string;\n  subtitle: string;\n  Icon?: typeof CategoryIcon;\n}> = (props) => (\n  <Grid item xs={6}>\n    <Paper style={{ padding: \"1rem\" }}>\n      <Grid\n        container\n        alignItems={\"center\"}\n        spacing={2}\n        justify={\"space-between\"}\n      >\n        <Grid item xs={1}>\n          {props.Icon ? <props.Icon fontSize={\"large\"} /> : null}\n        </Grid>\n        <Grid item xs={10}>\n          <Typography variant={\"h4\"}>{props.title}</Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <label style={{ fontSize: \"16px\" }}>{props.subtitle} </label>\n        </Grid>\n      </Grid>\n    </Paper>\n  </Grid>\n);\nconst WelcomeText: FunctionComponent = () => {\n  const [openDialog, setOpen] = React.useState<boolean>(false);\n  return (\n    <Grid\n      container\n      spacing={4}\n      style={{ padding: \"2rem\", margin: \"-16px -32px\" }}\n    >\n      <Grid item xs={6}>\n        <Typography color=\"primary\" variant={\"h3\"}>\n          Welcome To YLabel\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Button\n          variant={\"contained\"}\n          color={\"primary\"}\n          fullWidth={true}\n          onClick={() => setOpen(true)}\n        >\n          <Typography align=\"center\" variant={\"h4\"}>\n            Start Categorizing\n          </Typography>\n        </Button>\n      </Grid>\n      <WelcomeItem\n        title={\"Categorize Documents\"}\n        subtitle={\"YLabel can help you categorize documents\"}\n        Icon={CategoryIcon}\n      />\n      <WelcomeItem\n        title={\"Customizable\"}\n        subtitle={\"YLabel works on your data and your categories. \"}\n        Icon={DescriptionIcon}\n      />\n      <WelcomeItem\n        title={\"Search\"}\n        subtitle={\"Use the search bar to find similar documents at once\"}\n        Icon={SearchIcon}\n      />\n      <WelcomeItem\n        title={\"Automation\"}\n        subtitle={\"YLabel learns from you and provides predictions\"}\n        Icon={ComputerIcon}\n      />\n      <WelcomeItem\n        title={\"Active Learning\"}\n        subtitle={\n          \"YLabel can tell you what to label so that it can learn faster and automate better\"\n        }\n        Icon={ComputerIcon}\n      />\n      <WelcomeItem\n        title={\"Download\"}\n        subtitle={\n          \"When you're done, click download to get back your labels and model predictions in a CSV\"\n        }\n        Icon={DoneIcon}\n      />\n      <WelcomeItem\n        title={\"Secure\"}\n        subtitle={\n          \"Your data never leaves your computer. YLabel runs the machine learning and search on your machine. \"\n        }\n        Icon={LockIcon}\n      />\n      <WelcomeItem\n        title={\"Open Source\"}\n        subtitle={\n          \"YLabel is free and open source. Fork the repo, extend it and help the community make it even better\"\n        }\n        Icon={GithubIcon}\n      />\n      <AddDataDialog open={openDialog} onClose={() => setOpen(false)} />\n    </Grid>\n  );\n};\n\nconst WelcomeLayout: FunctionComponent = () => {\n  return (\n    <ThreeColumnBody\n      Middle={<WelcomeText />}\n      Left={<div></div>}\n      Right={<div></div>}\n    />\n  );\n};\n\nexport default WelcomeLayout;\n","import React, { FunctionComponent } from \"react\";\nimport useDatabase from \"../../../backend/database/useDatabase\";\nimport OpenAnnotationBody from \"./OpenAnnotationBodyLayout\";\nimport WelcomeLayout from \"./WelcomeLayout\";\n\nconst LayoutDispatch: FunctionComponent = () => {\n  const exampleCount = useDatabase(\n    \"exampleCount\",\n    \"example\",\n    (db) => db.example.count(),\n    undefined\n  );\n  if (exampleCount.data) {\n    return <OpenAnnotationBody />;\n  } else {\n    return <WelcomeLayout />;\n  }\n};\n\nexport default LayoutDispatch;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"typeface-roboto\";\nimport { QueryCache, ReactQueryCacheProvider } from \"react-query\";\nimport \"react-reflex/styles.css\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport store from \"./frontend/redux-state/rootState\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport PrimarySearchAppBar from \"./frontend/components/appBar/Appbar\";\nimport LayoutDispatch from \"./frontend/components/layouts/LayoutDispatch\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: 10,\n    fontFamily: \"Roboto\",\n  },\n});\n\nconst cache = new QueryCache();\nconst useStyles = makeStyles(() => ({\n  \"@global\": {\n    \"*:focus\": {\n      outline: 0,\n    },\n    //don't use the browsers outline for selected stuff\n  },\n}));\nexport function App() {\n  const classes = useStyles();\n  return (\n    <Provider store={store}>\n      <ReactQueryCacheProvider queryCache={cache}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline classes={classes} />\n          <PrimarySearchAppBar />\n          <LayoutDispatch />\n        </ThemeProvider>\n      </ReactQueryCacheProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IndexWorkerSingleton } from \"./backend/workers/docIndex/IndexWorkerSingleton\";\nimport { mainThreadDB } from \"./backend/database/database\";\n\nconst indexWorkerSingleton = IndexWorkerSingleton.getInstance();\nindexWorkerSingleton\n  .initializeIndex()\n  .then(() => {})\n  .catch((err) => {});\n//TODO this is a workaround remove this\nmainThreadDB.label.offset(12).delete();\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(logger))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}